[{"/Users/somkiatjaidee/code/elec-app/client/src/index.js":"1","/Users/somkiatjaidee/code/elec-app/client/src/reportWebVitals.js":"2","/Users/somkiatjaidee/code/elec-app/client/src/App.js":"3","/Users/somkiatjaidee/code/elec-app/client/src/reducers/index.js":"4","/Users/somkiatjaidee/code/elec-app/client/src/firebase.js":"5","/Users/somkiatjaidee/code/elec-app/client/src/pages/Checkout.js":"6","/Users/somkiatjaidee/code/elec-app/client/src/pages/Home.js":"7","/Users/somkiatjaidee/code/elec-app/client/src/pages/Shop.js":"8","/Users/somkiatjaidee/code/elec-app/client/src/pages/Payment.js":"9","/Users/somkiatjaidee/code/elec-app/client/src/pages/Product.js":"10","/Users/somkiatjaidee/code/elec-app/client/src/pages/auth/Register.js":"11","/Users/somkiatjaidee/code/elec-app/client/src/pages/auth/ForgotPassword.js":"12","/Users/somkiatjaidee/code/elec-app/client/src/pages/Cart.js":"13","/Users/somkiatjaidee/code/elec-app/client/src/pages/auth/Login.js":"14","/Users/somkiatjaidee/code/elec-app/client/src/pages/user/Password.js":"15","/Users/somkiatjaidee/code/elec-app/client/src/pages/auth/RegisterComplete.js":"16","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/AdminDashboard.js":"17","/Users/somkiatjaidee/code/elec-app/client/src/pages/user/History.js":"18","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/category/CategoryUpdate.js":"19","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/category/CategoryCreate.js":"20","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/sub/SubCreate.js":"21","/Users/somkiatjaidee/code/elec-app/client/src/pages/user/Wishlist.js":"22","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/generation/GenerationUpdate.js":"23","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/brand/BrandUpdate.js":"24","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/generation/GenerationCreate.js":"25","/Users/somkiatjaidee/code/elec-app/client/src/pages/sub/SubHome.js":"26","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/brand/BrandCreate.js":"27","/Users/somkiatjaidee/code/elec-app/client/src/pages/category/CategoryHome.js":"28","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/coupon/CreateCouponPage.js":"29","/Users/somkiatjaidee/code/elec-app/client/src/functions/auth.js":"30","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/sub/SubUpdate.js":"31","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/ProductUpdate.js":"32","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/AllProducts.js":"33","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/ProductCreate.js":"34","/Users/somkiatjaidee/code/elec-app/client/src/reducers/userReducer.js":"35","/Users/somkiatjaidee/code/elec-app/client/src/pages/about/Shipping.js":"36","/Users/somkiatjaidee/code/elec-app/client/src/pages/about/Policy.js":"37","/Users/somkiatjaidee/code/elec-app/client/src/reducers/cartReducer.js":"38","/Users/somkiatjaidee/code/elec-app/client/src/reducers/searchReducer.js":"39","/Users/somkiatjaidee/code/elec-app/client/src/reducers/CODReducer.js":"40","/Users/somkiatjaidee/code/elec-app/client/src/reducers/drawerReducer.js":"41","/Users/somkiatjaidee/code/elec-app/client/src/pages/about/ReturnRefund.js":"42","/Users/somkiatjaidee/code/elec-app/client/src/pages/about/OrderCancel.js":"43","/Users/somkiatjaidee/code/elec-app/client/src/reducers/couponReducer.js":"44","/Users/somkiatjaidee/code/elec-app/client/src/components/drawer/SideDrawer.js":"45","/Users/somkiatjaidee/code/elec-app/client/src/components/nav/Header.js":"46","/Users/somkiatjaidee/code/elec-app/client/src/components/routes/UserRoute.js":"47","/Users/somkiatjaidee/code/elec-app/client/src/components/nav/Footer.js":"48","/Users/somkiatjaidee/code/elec-app/client/src/components/routes/AdminRoute.js":"49","/Users/somkiatjaidee/code/elec-app/client/src/functions/sub.js":"50","/Users/somkiatjaidee/code/elec-app/client/src/functions/user.js":"51","/Users/somkiatjaidee/code/elec-app/client/src/functions/brand.js":"52","/Users/somkiatjaidee/code/elec-app/client/src/functions/product.js":"53","/Users/somkiatjaidee/code/elec-app/client/src/functions/category.js":"54","/Users/somkiatjaidee/code/elec-app/client/src/components/cards/Jumbotron.js":"55","/Users/somkiatjaidee/code/elec-app/client/src/components/home/BestSellers.js":"56","/Users/somkiatjaidee/code/elec-app/client/src/components/category/CategoryList.js":"57","/Users/somkiatjaidee/code/elec-app/client/src/components/sub/SubList.js":"58","/Users/somkiatjaidee/code/elec-app/client/src/components/cards/ProductCard.js":"59","/Users/somkiatjaidee/code/elec-app/client/src/components/home/NewArrivals.js":"60","/Users/somkiatjaidee/code/elec-app/client/src/components/routes/LoadingToRedirect.js":"61","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/FileUpload.js":"62","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/Search.js":"63","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/ProductCreateForm.js":"64","/Users/somkiatjaidee/code/elec-app/client/src/components/nav/AdminNav.js":"65","/Users/somkiatjaidee/code/elec-app/client/src/components/cards/AdminProductCard.js":"66","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/ProductUpdateForm.js":"67","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/LocalSearch.js":"68","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/CategoryForm.js":"69","/Users/somkiatjaidee/code/elec-app/client/src/functions/coupon.js":"70","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/BrandForm.js":"71","/Users/somkiatjaidee/code/elec-app/client/src/functions/generation.js":"72","/Users/somkiatjaidee/code/elec-app/client/src/components/cards/LoadingCard.js":"73","/Users/somkiatjaidee/code/elec-app/client/src/functions/rating.js":"74","/Users/somkiatjaidee/code/elec-app/client/src/components/nav/UserNav.js":"75","/Users/somkiatjaidee/code/elec-app/client/src/components/cards/ShowPaymentInfo.js":"76","/Users/somkiatjaidee/code/elec-app/client/src/components/cards/ProductCardInCheckout.js":"77","/Users/somkiatjaidee/code/elec-app/client/src/functions/admin.js":"78","/Users/somkiatjaidee/code/elec-app/client/src/components/order/Invoice.js":"79","/Users/somkiatjaidee/code/elec-app/client/src/components/order/Orders.js":"80","/Users/somkiatjaidee/code/elec-app/client/src/components/cards/SingleProduct.js":"81","/Users/somkiatjaidee/code/elec-app/client/src/components/StripeCheckout.js":"82","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/Star.js":"83","/Users/somkiatjaidee/code/elec-app/client/src/functions/stripe.js":"84","/Users/somkiatjaidee/code/elec-app/client/src/components/cards/ProductListItems.js":"85","/Users/somkiatjaidee/code/elec-app/client/src/components/modal/RatingModal.js":"86","/Users/somkiatjaidee/code/elec-app/client/src/components/home/MiniBestSellers.js":"87","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/ProductDetail.js":"88","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/ProductContent.js":"89","/Users/somkiatjaidee/code/elec-app/client/src/helpers/quill.js":"90","/Users/somkiatjaidee/code/elec-app/client/src/pages/user/Prifile.js":"91","/Users/somkiatjaidee/code/elec-app/client/src/pages/user/Contact.js":"92"},{"size":923,"mtime":1642945551088,"results":"93","hashOfConfig":"94"},{"size":362,"mtime":1642776080203,"results":"95","hashOfConfig":"94"},{"size":6060,"mtime":1644130766422,"results":"96","hashOfConfig":"94"},{"size":541,"mtime":1642776080203,"results":"97","hashOfConfig":"94"},{"size":652,"mtime":1644148849151,"results":"98","hashOfConfig":"94"},{"size":7994,"mtime":1644138501095,"results":"99","hashOfConfig":"94"},{"size":3579,"mtime":1644147388222,"results":"100","hashOfConfig":"94"},{"size":14248,"mtime":1643511676361,"results":"101","hashOfConfig":"94"},{"size":676,"mtime":1642776080201,"results":"102","hashOfConfig":"94"},{"size":2695,"mtime":1643871660489,"results":"103","hashOfConfig":"94"},{"size":1724,"mtime":1642776080202,"results":"104","hashOfConfig":"94"},{"size":1860,"mtime":1642776080202,"results":"105","hashOfConfig":"94"},{"size":4757,"mtime":1643446804770,"results":"106","hashOfConfig":"94"},{"size":5981,"mtime":1642776080202,"results":"107","hashOfConfig":"94"},{"size":2061,"mtime":1642776080202,"results":"108","hashOfConfig":"94"},{"size":3498,"mtime":1642776080202,"results":"109","hashOfConfig":"94"},{"size":1280,"mtime":1643455294015,"results":"110","hashOfConfig":"94"},{"size":2875,"mtime":1644119726918,"results":"111","hashOfConfig":"94"},{"size":2731,"mtime":1642776080201,"results":"112","hashOfConfig":"94"},{"size":4238,"mtime":1642776080201,"results":"113","hashOfConfig":"94"},{"size":5113,"mtime":1642776080202,"results":"114","hashOfConfig":"94"},{"size":1747,"mtime":1642776080203,"results":"115","hashOfConfig":"94"},{"size":3353,"mtime":1642776080201,"results":"116","hashOfConfig":"94"},{"size":2684,"mtime":1642776080201,"results":"117","hashOfConfig":"94"},{"size":5200,"mtime":1642776080201,"results":"118","hashOfConfig":"94"},{"size":1519,"mtime":1642776080202,"results":"119","hashOfConfig":"94"},{"size":4156,"mtime":1642776080201,"results":"120","hashOfConfig":"94"},{"size":1643,"mtime":1642776080202,"results":"121","hashOfConfig":"94"},{"size":6130,"mtime":1642776080201,"results":"122","hashOfConfig":"94"},{"size":765,"mtime":1642776080199,"results":"123","hashOfConfig":"94"},{"size":3337,"mtime":1642776080202,"results":"124","hashOfConfig":"94"},{"size":11297,"mtime":1644110321465,"results":"125","hashOfConfig":"94"},{"size":2581,"mtime":1643341352353,"results":"126","hashOfConfig":"94"},{"size":4530,"mtime":1644071868698,"results":"127","hashOfConfig":"94"},{"size":258,"mtime":1642776080203,"results":"128","hashOfConfig":"94"},{"size":2914,"mtime":1642866083484,"results":"129","hashOfConfig":"94"},{"size":24269,"mtime":1643014503607,"results":"130","hashOfConfig":"94"},{"size":420,"mtime":1642776080203,"results":"131","hashOfConfig":"94"},{"size":225,"mtime":1642776080203,"results":"132","hashOfConfig":"94"},{"size":181,"mtime":1642776080203,"results":"133","hashOfConfig":"94"},{"size":192,"mtime":1642776080203,"results":"134","hashOfConfig":"94"},{"size":12475,"mtime":1643015736623,"results":"135","hashOfConfig":"94"},{"size":277,"mtime":1642863111458,"results":"136","hashOfConfig":"94"},{"size":195,"mtime":1642776080203,"results":"137","hashOfConfig":"94"},{"size":2255,"mtime":1642776080198,"results":"138","hashOfConfig":"94"},{"size":3399,"mtime":1644130456452,"results":"139","hashOfConfig":"94"},{"size":377,"mtime":1642776080199,"results":"140","hashOfConfig":"94"},{"size":5516,"mtime":1643445632976,"results":"141","hashOfConfig":"94"},{"size":895,"mtime":1642776080199,"results":"142","hashOfConfig":"94"},{"size":775,"mtime":1642776080200,"results":"143","hashOfConfig":"94"},{"size":2786,"mtime":1644142004789,"results":"144","hashOfConfig":"94"},{"size":932,"mtime":1642776080200,"results":"145","hashOfConfig":"94"},{"size":1986,"mtime":1644055394051,"results":"146","hashOfConfig":"94"},{"size":968,"mtime":1642776080200,"results":"147","hashOfConfig":"94"},{"size":268,"mtime":1642776080197,"results":"148","hashOfConfig":"94"},{"size":1898,"mtime":1642898947658,"results":"149","hashOfConfig":"94"},{"size":1105,"mtime":1644146659081,"results":"150","hashOfConfig":"94"},{"size":1007,"mtime":1644146712182,"results":"151","hashOfConfig":"94"},{"size":4043,"mtime":1644144642218,"results":"152","hashOfConfig":"94"},{"size":1907,"mtime":1642898889198,"results":"153","hashOfConfig":"94"},{"size":708,"mtime":1642776080199,"results":"154","hashOfConfig":"94"},{"size":4147,"mtime":1643854394523,"results":"155","hashOfConfig":"94"},{"size":1075,"mtime":1642776080198,"results":"156","hashOfConfig":"94"},{"size":5701,"mtime":1644130935612,"results":"157","hashOfConfig":"94"},{"size":1430,"mtime":1642776080198,"results":"158","hashOfConfig":"94"},{"size":1620,"mtime":1643879525486,"results":"159","hashOfConfig":"94"},{"size":8476,"mtime":1644070287256,"results":"160","hashOfConfig":"94"},{"size":489,"mtime":1642776080198,"results":"161","hashOfConfig":"94"},{"size":580,"mtime":1642776080198,"results":"162","hashOfConfig":"94"},{"size":503,"mtime":1642776080200,"results":"163","hashOfConfig":"94"},{"size":574,"mtime":1642776080198,"results":"164","hashOfConfig":"94"},{"size":873,"mtime":1642776080200,"results":"165","hashOfConfig":"94"},{"size":502,"mtime":1642802488691,"results":"166","hashOfConfig":"94"},{"size":1142,"mtime":1642937900441,"results":"167","hashOfConfig":"94"},{"size":734,"mtime":1644126972425,"results":"168","hashOfConfig":"94"},{"size":908,"mtime":1643455692321,"results":"169","hashOfConfig":"94"},{"size":3927,"mtime":1643865714659,"results":"170","hashOfConfig":"94"},{"size":481,"mtime":1642776080199,"results":"171","hashOfConfig":"94"},{"size":3539,"mtime":1643450620451,"results":"172","hashOfConfig":"94"},{"size":2416,"mtime":1643455979690,"results":"173","hashOfConfig":"94"},{"size":6008,"mtime":1644144497720,"results":"174","hashOfConfig":"94"},{"size":6455,"mtime":1643447325867,"results":"175","hashOfConfig":"94"},{"size":436,"mtime":1642776080198,"results":"176","hashOfConfig":"94"},{"size":291,"mtime":1642776080200,"results":"177","hashOfConfig":"94"},{"size":2548,"mtime":1642776770680,"results":"178","hashOfConfig":"94"},{"size":1491,"mtime":1642776080198,"results":"179","hashOfConfig":"94"},{"size":1890,"mtime":1643873880537,"results":"180","hashOfConfig":"94"},{"size":3905,"mtime":1644075430814,"results":"181","hashOfConfig":"94"},{"size":3978,"mtime":1644140717251,"results":"182","hashOfConfig":"94"},{"size":832,"mtime":1644075164612,"results":"183","hashOfConfig":"94"},{"size":3307,"mtime":1644130613654,"results":"184","hashOfConfig":"94"},{"size":3678,"mtime":1644144000467,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zrh1au",{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407"},"/Users/somkiatjaidee/code/elec-app/client/src/index.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/reportWebVitals.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/App.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/reducers/index.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/firebase.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/Checkout.js",["408"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport {\n    getUserCart,\n    emptyUserCart,\n    saveUserAddress,\n    applyCoupon,\n    createCashOrderForUser,\n    getUserAddress\n} from \"../functions/user\";\nimport { Button } from 'antd';\n\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst Checkout = ({ history }) => {\n    const [products, setProducts] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [address, setAddress] = useState([]);\n    const [addressSaved, setAddressSaved] = useState(false);\n    const [coupon, setCoupon] = useState(\"\");\n    // discount price\n    const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\n    const [discountError, setDiscountError] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const { user, COD } = useSelector((state) => ({ ...state }));\n    const couponTrueOrFalse = useSelector((state) => state.coupon);\n\n    useEffect(() => {\n        getUserCart(user.token).then((res) => {\n            console.log(\"user cart res\", JSON.stringify(res.data, null, 4));\n            setProducts(res.data.products);\n            setTotal(res.data.cartTotal);\n        });\n\n        getUserAddress(user.token).then((res) => {\n            console.log(\"user address res\", JSON.stringify(res.data, null, 4));\n            if (res.data.user.address != null) {\n                setAddress(res.data.user.address);\n            }\n        });\n\n    }, []);\n\n    const emptyCart = () => {\n        // remove from local storage\n        if (typeof window !== \"undefined\") {\n            localStorage.removeItem(\"cart\");\n        }\n        // remove from redux\n        dispatch({\n            type: \"ADD_TO_CART\",\n            payload: [],\n        });\n        // remove from backend\n        emptyUserCart(user.token).then((res) => {\n            setProducts([]);\n            setTotal(0);\n            setTotalAfterDiscount(0);\n            setCoupon(\"\");\n            toast.success(\"Cart is emapty. Contniue shopping.\");\n        });\n    };\n\n    const saveAddressToDb = () => {\n        // console.log(address);\n        saveUserAddress(user.token, address).then((res) => {\n            if (res.data.ok) {\n                setAddressSaved(true);\n                toast.success(\"Address saved\");\n            }\n        });\n    };\n\n    const applyDiscountCoupon = () => {\n        console.log(\"send coupon to backend\", coupon);\n        applyCoupon(user.token, coupon).then((res) => {\n            console.log(\"RES ON COUPON APPLIED\", res.data);\n            if (res.data) {\n                setTotalAfterDiscount(res.data);\n                // update redux coupon applied true/false\n                dispatch({\n                    type: \"COUPON_APPLIED\",\n                    payload: true,\n                });\n            }\n            // error\n            if (res.data.err) {\n                setDiscountError(res.data.err);\n                // update redux coupon applied true/false\n                dispatch({\n                    type: \"COUPON_APPLIED\",\n                    payload: false,\n                });\n            }\n        });\n    };\n\n    const showAddress = () => (\n        <>\n            <ReactQuill theme=\"snow\" value={address} onChange={setAddress} />\n            <Button className=\"mt-2\" onClick={saveAddressToDb} type=\"primary\" ghost>\n                Save\n            </Button>\n        </>\n    );\n\n    const showProductSummary = () =>\n        products.map((p, i) => (\n            <div key={i}>\n                <p>\n                    {i + 1}. {p.product.title} ({p.color}) x {p.count} ={\" ฿\"}\n                    {p.product.price * p.count}\n                </p>\n            </div>\n        ));\n\n    const showApplyCoupon = () => (\n        <>\n            <input\n                onChange={(e) => {\n                    setCoupon(e.target.value);\n                    setDiscountError(\"\");\n                }}\n                value={coupon}\n                type=\"text\"\n                className=\"form-control\"\n            />\n            <Button onClick={applyDiscountCoupon} className=\"mt-2\" type=\"dashed\" danger>\n                Apply\n            </Button>\n        </>\n    );\n\n    /*     \n    const createCashOrder = () => {\n            createCashOrderForUser(user.token, COD).then((res) => {\n                console.log(\"USER CASH ORDER CREATED RES \", res);\n                // empty cart form redux, local Storage, reset coupon, reset COD, redirect\n            });\n        }; \n    */\n\n    const createCashOrder = () => {\n        createCashOrderForUser(user.token, COD, couponTrueOrFalse).then((res) => {\n            console.log(\"USER CASH ORDER CREATED RES \", res);\n            // empty cart form redux, local Storage, reset coupon, reset COD, redirect\n            if (res.data.ok) {\n                // empty local storage\n                if (typeof window !== \"undefined\") localStorage.removeItem(\"cart\");\n                // empty redux cart\n                dispatch({\n                    type: \"ADD_TO_CART\",\n                    payload: [],\n                });\n                // empty redux coupon\n                dispatch({\n                    type: \"COUPON_APPLIED\",\n                    payload: false,\n                });\n                // empty redux COD\n                dispatch({\n                    type: \"COD\",\n                    payload: false,\n                });\n                // empty cart from backend\n                emptyUserCart(user.token);\n                // redirect\n                setTimeout(() => {\n                    history.push(\"/user/history\");\n                }, 1000);\n            }\n        });\n    };\n\n    return (\n        <div className=\"container-fluid row\">\n            <div className=\"col-md-5\">\n                <h4>Delivery Address</h4>\n                {showAddress()}\n                <hr />\n                <h4>Got Coupon?</h4>\n                {showApplyCoupon()}\n                <br />\n                {discountError && <p className=\"bg-danger text-white p-2\">{discountError}</p>}\n            </div>\n\n            <div className=\"col-md-7\">\n                <h4>Order Summary</h4>\n                <hr />\n                <p>Products {products.length}</p>\n                <hr />\n                {showProductSummary()}\n                <hr />\n                <p>Cart Total: <b>฿{total}</b></p>\n                {totalAfterDiscount > 0 && (\n                    <p className=\"bg-success text-white p-2\">\n                        Discount Applied: Total Payable: ฿{totalAfterDiscount}\n                    </p>\n                )}\n\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        {COD ? (\n                            <Button\n                                disabled={!addressSaved || !products.length}\n                                onClick={createCashOrder}\n                                type=\"primary\" shape=\"round\"\n                            >\n                                Place Order\n                            </Button>\n                        ) : (\n                            <Button\n                                disabled={!addressSaved || !products.length}\n                                onClick={() => history.push(\"/payment\")}\n                                type=\"primary\" shape=\"round\"\n                            >\n                                Place Order\n                            </Button>\n                        )}\n                    </div>\n                    <div className=\"col-6\">\n                        <Button\n                            disabled={!products.length}\n                            onClick={emptyCart}\n                            type=\"dashed\" shape=\"round\"\n                        >\n                            Empty Cart\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Checkout;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/Home.js",["409","410","411","412","413","414"],"/* import React, { useEffect, useState } from 'react'\nimport { getProductsByCount } from \"../functions/product\";\nimport ProductCard from \"../components/cards/ProductCard\";\nimport Jumbotron from \"../components/cards/Jumbotron\";\nimport LoadingCard from \"../components/cards/LoadingCard\";\n\nconst Home = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        loadAllProducts();\n    }, []);\n\n    const loadAllProducts = () => {\n        setLoading(true);\n        getProductsByCount(3).then((res) => {\n            setProducts(res.data);\n            setLoading(false);\n        });\n    };\n\n    return (\n        <>\n            <div className=\"jumbotron text-danger h1 font-weight-bold text-center\">\n                <Jumbotron text={[\"Latest Products\", \"New Arrivals\", \"Best Sellers\"]} />\n            </div>\n            <div className=\"container\">\n                {loading ? (\n                    <LoadingCard count={3} />\n                ) : (\n                        <div className=\"row\">\n                            {products.map((product) => (\n                                <div key={product._id} className=\"col-md-4\">\n                                    <ProductCard product={product} />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n            </div>\n        </>\n    )\n}\n\nexport default Home; */\n\nimport React from \"react\";\nimport Jumbotron from \"../components/cards/Jumbotron\";\nimport NewArrivals from \"../components/home/NewArrivals\";\nimport BestSellers from \"../components/home/BestSellers\";\nimport CategoryList from \"../components/category/CategoryList\";\nimport SubList from \"../components/sub/SubList\";\n\nconst Home = () => {\n    return (\n        <div>\n            <div className=\"jumbotron text-danger h1 font-weight-bold text-center\">\n                <Jumbotron text={[\n                    \"จำหน่ายอุปกรณ์อิเล็กทรอนิกส์\", \n                    \"ไมโครคอนโทรลเลอร์ / สมองกลฝังตัว / Sensor\",\n                    \"Internet of Things / Arduino / ESP32 / ESP8266\",\n                    \"สินค้าโกดังในไทย ส่งถึงลูกค้าภายใน 1-3 วัน\",\n                    \"Latest Products\", \n                    \"New Arrivals\", \n                    \"Best Sellers\"\n                    ]} />\n            </div>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-md-3\">\n                        <a name=\"categories\" />\n                        <h5 className=\"text-center p-1 mt-1 mb-2 display-4 jumbotron\">Categories</h5>\n                        <CategoryList />\n\n                        <h4 className=\"text-center p-1 mt-1 mb-2 display-4 jumbotron\">Sub Categories</h4>\n                        <SubList />\n                    </div>\n                    <div className=\"col-md-9\">\n                        <a name=\"new-arrivals\" />\n                        <h4 className=\"text-center p-1 mt-1 mb-1 display-3 jumbotron\">New Arrivals</h4>\n                        <NewArrivals />\n\n                        <a name=\"best-sellers\" />\n                        <h4 className=\"text-center p-1 mt-1 mb-1 display-3 jumbotron\">Best Sellers</h4>\n                        <BestSellers />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Home;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/Shop.js",["415","416","417","418","419","420","421"],"import React, { useState, useEffect } from \"react\";\nimport { getProductsByCount, fetchProductsByFilter, } from \"../functions/product\";\nimport { getCategories } from \"../functions/category\";\nimport { getSubs } from \"../functions/sub\";\nimport { getBrands } from \"../functions/brand\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ProductCard from \"../components/cards/ProductCard\";\nimport { Menu, Slider, Checkbox, Radio } from \"antd\";\nimport { DollarOutlined, DownSquareOutlined, StarOutlined } from \"@ant-design/icons\";\nimport Star from \"../components/forms/Star\";\n\nconst { SubMenu, ItemGroup } = Menu;\n\nconst Shop = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [price, setPrice] = useState([0, 0]);\n    const [ok, setOk] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [categoryIds, setCategoryIds] = useState([]);\n    const [star, setStar] = useState(\"\");\n    const [subs, setSubs] = useState([]);\n    const [sub, setSub] = useState(\"\");\n    const [brands, setBrands] = useState([\"Espressif\", \"Atmel\", \"Phillips\", \"Microchip\", \"Analog Device\", \"STMicroelectronics\", \"Parallax\", \"Cypress\", \"Texas Intruments\", \"Motorola\", \"Zilog\", \"Rabbit Semiconductor\", \"Renesas\",\n        \"Sumsung\", \"Panasonic\", \"Sony\", \"Acer\", \"Apple\", \"Aston\", \"Dell\", \"Fujifilm\", \"GoPro\", \"HP\", \"JBL\", \"Lenovo\", \"LG\", \"Microsoft\", \"Sandisk\", \"WD\", \"Zotac\", \"No Brand\",]);\n    const [brand, setBrand] = useState(\"\");\n    const [colors, setColors] = useState([\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\", \"Red\", \"Green\"]);\n    const [color, setColor] = useState(\"\");\n    const [shipping, setShipping] = useState(\"\");\n\n    let dispatch = useDispatch();\n    let { search } = useSelector((state) => ({ ...state }));\n    const { text } = search;\n\n    useEffect(() => {\n        loadAllProducts();\n        // fetch categories\n        getCategories().then((res) => setCategories(res.data));\n        // fetch subcategories\n        getSubs().then((res) => setSubs(res.data));\n        // fetch brands\n        // getBrands().then((res) => setBrands(res.data)); //\n\n    }, []);\n\n    const fetchProducts = (arg) => {\n        fetchProductsByFilter(arg).then((res) => {\n            setProducts(res.data);\n        });\n    };\n\n    // 1. load products by default on page load\n    const loadAllProducts = () => {\n        getProductsByCount(1000) //12\n            .then((p) => {\n                setProducts(p.data);\n                setLoading(false);\n            })\n            .catch((err) => {\n                setLoading(false);\n                console.log(err);\n            });\n    };\n\n    // 2. load products on user search input\n    useEffect(() => {\n        const delayed = setTimeout(() => {\n            fetchProducts({ query: text });\n            if (!text) {\n                loadAllProducts();\n            }\n        }, 400);\n        return () => clearTimeout(delayed);\n    }, [text]);\n\n    // 3. load products based on price range\n    useEffect(() => {\n        console.log(\"ok to request\");\n        fetchProducts({ price });\n    }, [ok]);\n\n    const handleSlider = (value) => {\n        dispatch({\n            type: \"SEARCH_QUERY\",\n            payload: { text: \"\" },\n        });\n\n        // reset\n        setCategoryIds([]);\n        setPrice(value);\n        setStar(\"\");\n        setSub(\"\");\n        setBrand(\"\");  //\n        setColor(\"\");\n        setShipping(\"\");\n        setTimeout(() => {\n            setOk(!ok);\n        }, 300);\n    };\n\n    // 4. load products based on category\n    // show categories in a list of checkbox\n    const showCategories = () =>\n        categories.map((c) => (\n            <div key={c._id}>\n                <Checkbox\n                    onChange={handleCheck}\n                    className=\"pb-2 pl-4 pr-4\"\n                    value={c._id}\n                    name=\"category\"\n                    checked={categoryIds.includes(c._id)}\n                >\n                    {c.name}\n                </Checkbox>\n                <br />\n            </div>\n        ));\n\n    // handle check for categories\n    const handleCheck = (e) => {\n        // reset\n        dispatch({\n            type: \"SEARCH_QUERY\",\n            payload: { text: \"\" },\n        });\n        setPrice([0, 0]);\n        setStar(\"\");\n        setSub(\"\");\n        setBrand(\"\");\n        setColor(\"\");\n        setShipping(\"\");\n        // console.log(e.target.value);\n        let inTheState = [...categoryIds];\n        let justChecked = e.target.value;\n        let foundInTheState = inTheState.indexOf(justChecked); // index or -1\n\n        // indexOf method ?? if not found returns -1 else return index [1,2,3,4,5]\n        if (foundInTheState === -1) {\n            inTheState.push(justChecked);\n        } else {\n            // if found pull out one item from index\n            inTheState.splice(foundInTheState, 1);\n        }\n\n        setCategoryIds(inTheState);\n        // console.log(inTheState);\n        fetchProducts({ category: inTheState });\n    };\n\n    // 5. show products by star rating\n    const handleStarClick = (num) => {\n        // console.log(num);\n        dispatch({\n            type: \"SEARCH_QUERY\",\n            payload: { text: \"\" },\n        });\n        setPrice([0, 0]);\n        setCategoryIds([]);\n        setStar(num);\n        setSub(\"\");\n        setBrand(\"\");\n        setColor(\"\");\n        setShipping(\"\");\n        fetchProducts({ stars: num });\n    };\n\n    const showStars = () => (\n        <div className=\"pr-4 pl-4 pb-2\">\n            <Star starClick={handleStarClick} numberOfStars={5} />\n            <Star starClick={handleStarClick} numberOfStars={4} />\n            <Star starClick={handleStarClick} numberOfStars={3} />\n            <Star starClick={handleStarClick} numberOfStars={2} />\n            <Star starClick={handleStarClick} numberOfStars={1} />\n        </div>\n    );\n\n    // 6. show products by sub category\n    const showSubs = () =>\n        subs.map((s) => (\n            <div\n                key={s._id}\n                onClick={() => handleSub(s)}\n                className=\"p-1 m-1 badge badge-secondary\"\n                style={{ cursor: \"pointer\" }}\n            >\n                {s.name}\n            </div>\n        ));\n\n    const handleSub = (sub) => {\n        // console.log(\"SUB\", sub);\n        setSub(sub);\n        dispatch({\n            type: \"SEARCH_QUERY\",\n            payload: { text: \"\" },\n        });\n        setPrice([0, 0]);\n        setCategoryIds([]);\n        setStar(\"\");\n        setBrand(\"\");\n        setColor(\"\");\n        setShipping(\"\");\n        fetchProducts({ sub });\n    };\n\n    // 7. show products based on brand name\n    const showBrands = () =>\n        brands.map((b) => (\n            <Radio\n                key={b}\n                value={b}\n                name={b}\n                checked={b === brand}\n                onChange={handleBrand}\n                className=\"pb-1 pl-4 pr-4\"\n            >\n                {b}\n            </Radio>\n        ));\n\n    const handleBrand = (e) => {\n        setSub(\"\");\n        dispatch({\n            type: \"SEARCH_QUERY\",\n            payload: { text: \"\" },\n        });\n        setPrice([0, 0]);\n        setCategoryIds([]);\n        setStar(\"\");\n        setColor(\"\");\n        setShipping(\"\");\n        setBrand(e.target.value);\n        fetchProducts({ brand: e.target.value });\n    };\n\n    // 8. show products based on color\n    const showColors = () =>\n        colors.map((c) => (\n            <Radio\n                key={c}\n                value={c}\n                name={c}\n                checked={c === color}\n                onChange={handleColor}\n                className=\"pb-1 pl-4 pr-4\"\n            >\n                {c}\n            </Radio>\n        ));\n\n    const handleColor = (e) => {\n        setSub(\"\");\n        dispatch({\n            type: \"SEARCH_QUERY\",\n            payload: { text: \"\" },\n        });\n        setPrice([0, 0]);\n        setCategoryIds([]);\n        setStar(\"\");\n        setBrand(\"\");\n        setColor(e.target.value);\n        setShipping(\"\");\n        fetchProducts({ color: e.target.value });\n    };\n\n    // 9. show products based on shipping yes/no\n    const showShipping = () => (\n        <>\n            <Checkbox\n                className=\"pb-2 pl-4 pr-4\"\n                onChange={handleShippingchange}\n                value=\"Yes\"\n                checked={shipping === \"Yes\"}\n            >\n                Yes\n            </Checkbox>\n\n            <Checkbox\n                className=\"pb-2 pl-4 pr-4\"\n                onChange={handleShippingchange}\n                value=\"No\"\n                checked={shipping === \"No\"}\n            >\n                No\n            </Checkbox>\n        </>\n    );\n\n    const handleShippingchange = (e) => {\n        setSub(\"\");\n        dispatch({\n            type: \"SEARCH_QUERY\",\n            payload: { text: \"\" },\n        });\n        setPrice([0, 0]);\n        setCategoryIds([]);\n        setStar(\"\");\n        setBrand(\"\");\n        setColor(\"\");\n        setShipping(e.target.value);\n        fetchProducts({ shipping: e.target.value });\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-3 pt-2\">\n                    <h4>Search/Filter</h4>\n                    <hr />\n                    <Menu defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"]} mode=\"inline\">\n                        {/* price */}\n                        <SubMenu\n                            key=\"1\"\n                            title={\n                                <span className=\"h6\">\n                                    <DollarOutlined /> Price\n                                </span>\n                            }\n                        >\n                            <div>\n                                <Slider\n                                    className=\"ml-4 mr-4\"\n                                    tipFormatter={(v) => `$${v}`}\n                                    range\n                                    value={price}\n                                    onChange={handleSlider}\n                                    max=\"4999\"\n                                />\n                            </div>\n                        </SubMenu>\n\n                        {/* category */}\n                        <SubMenu\n                            key=\"2\"\n                            title={\n                                <span className=\"h6\">\n                                    <DownSquareOutlined /> Categories\n                                </span>\n                            }\n                        >\n                            <div style={{ maringTop: \"-10px\" }}>{showCategories()}</div>\n                        </SubMenu>\n\n                        {/* stars */}\n                        <SubMenu\n                            key=\"3\"\n                            title={\n                                <span className=\"h6\">\n                                    <StarOutlined /> Rating\n                                </span>\n                            }\n                        >\n                            <div style={{ maringTop: \"-10px\" }}>{showStars()}</div>\n                        </SubMenu>\n\n                        {/* sub category */}\n                        <SubMenu\n                            key=\"4\"\n                            title={\n                                <span className=\"h6\">\n                                    <DownSquareOutlined /> Sub Categories\n                                </span>\n                            }\n                        >\n                            <div style={{ maringTop: \"-10px\" }} className=\"pl-4 pr-4\">\n                                {showSubs()}\n                            </div>\n                        </SubMenu>\n\n                        {/* brands */}\n                        <SubMenu\n                            key=\"5\"\n                            title={\n                                <span className=\"h6\">\n                                    <DownSquareOutlined /> Brands\n                                </span>\n                            }\n                        >\n                            <div style={{ maringTop: \"-10px\" }} className=\"pr-5\">\n                                {showBrands()}\n                            </div>\n                        </SubMenu>\n\n                        {/* colors */}\n                        <SubMenu\n                            key=\"6\"\n                            title={\n                                <span className=\"h6\">\n                                    <DownSquareOutlined /> Colors\n                                </span>\n                            }\n                        >\n                            <div style={{ maringTop: \"-10px\" }} className=\"pr-5\">\n                                {showColors()}\n                            </div>\n                        </SubMenu>\n\n                        {/* shipping */}\n                        <SubMenu\n                            key=\"7\"\n                            title={\n                                <span className=\"h6\">\n                                    <DownSquareOutlined /> Shipping\n                                </span>\n                            }\n                        >\n                            <div style={{ maringTop: \"-10px\" }} className=\"pr-5\">\n                                {showShipping()}\n                            </div>\n                        </SubMenu>\n\n                    </Menu>\n                </div>\n\n                <div className=\"col-md-9 pt-2\">\n                    {loading ? (\n                        <h4 className=\"text-danger\">Loading...</h4>\n                    ) : (\n                        <h4>Products</h4>\n                    )}\n\n                    {products.length < 1 && <p>No products found</p>}\n\n                    <div className=\"row pb-5\">\n                        {products.map((p) => (\n                            <div key={p._id} className=\"col-md-3 col-6 mt-3 p-1\">\n                                <ProductCard product={p} />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Shop;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/Payment.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/Product.js",["422","423"],"import React, { useEffect, useState } from \"react\";\nimport { getProduct, productStar } from \"../functions/product\";\nimport SingleProduct from \"../components/cards/SingleProduct\";\nimport { useSelector } from \"react-redux\";\nimport { getRelated } from \"../functions/product\";\nimport ProductCard from \"../components/cards/ProductCard\";\n\nconst Product = ({ match }) => {\n    const [product, setProduct] = useState({});\n    const [related, setRelated] = useState([]);\n    const [star, setStar] = useState(0);\n\n    // redux\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const { slug } = match.params;\n\n    useEffect(() => {\n        loadSingleProduct();\n    }, [slug]);\n\n    useEffect(() => {\n        if (product.ratings && user) {\n            let existingRatingObject = product.ratings.find(\n                (ele) => ele.postedBy.toString() === user._id.toString()\n            );\n            existingRatingObject && setStar(existingRatingObject.star); // current user's star\n        }\n    });\n\n    // const loadSingleProduct = () =>\n    //     getProduct(slug).then((res) => setProduct(res.data));\n\n    const loadSingleProduct = () => {\n        getProduct(slug).then((res) => {\n            setProduct(res.data);\n            // load related\n            getRelated(res.data._id).then((res) => setRelated(res.data));\n        });\n    };\n\n    const onStarClick = (newRating, name) => {\n        setStar(newRating);\n        console.table(newRating, name);\n        productStar(name, newRating, user.token).then((res) => {\n            console.log(\"rating clicked\", res.data);\n            loadSingleProduct(); // if you want to show updated rating in real time\n        });\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row pt-4\">\n                <SingleProduct\n                    product={product}\n                    onStarClick={onStarClick}\n                    star={star}\n                />\n            </div>\n\n            <div className=\"row\">\n                <div className=\"col text-center pt-5 pb-5\">\n                    <hr />\n                    <h1>Related Products</h1>\n                    <hr />\n                </div>\n            </div>\n\n            <div className=\"row pb-5\">\n                {related.length ? (\n                    related.map((r) => (\n                        <div key={r._id} className=\"col-md-3 col-6 p-1\">\n                            <ProductCard product={r} />\n                        </div>\n                    ))\n                ) : (\n                        <div className=\"text-center col\">No Products Found</div>\n                    )}\n            </div>\n        </div>\n    );\n};\n\nexport default Product;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/auth/Register.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/auth/ForgotPassword.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/Cart.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/auth/Login.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/user/Password.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/auth/RegisterComplete.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/AdminDashboard.js",["424","425"],"import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../components/nav/AdminNav\";\nimport { getOrders, changeStatus } from \"../../functions/admin\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport Orders from \"../../components/order/Orders\";\n\n\nconst AdminDashboard = () => {\n  const [orders, setOrders] = useState([]);\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadOrders();\n  }, []);\n\n  const loadOrders = () =>\n    getOrders(user.token).then((res) => {\n      console.log(JSON.stringify(res.data, null, 4));\n      setOrders(res.data);\n    });\n\n  const handleStatusChange = (orderId, orderStatus) => {\n    changeStatus(orderId, orderStatus, user.token).then((res) => {\n      toast.success(\"Status updated\");\n      loadOrders();\n    });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <AdminNav />\n        </div>\n        <div className=\"col-md-10\">\n          <h4>Admin Dashboard</h4>\n          {/* {JSON.stringify(orders)} */}\n          <Orders orders={orders} handleStatusChange={handleStatusChange} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;","/Users/somkiatjaidee/code/elec-app/client/src/pages/user/History.js",["426","427","428"],"import React, { useState, useEffect } from \"react\";\nimport { Card } from 'antd'\nimport UserNav from \"../../components/nav/UserNav\";\nimport { getUserOrders } from \"../../functions/user\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { toast } from \"react-toastify\";\nimport ShowPaymentInfo from \"../../components/cards/ShowPaymentInfo\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport Invoice from \"../../components/order/Invoice\";\n\nconst History = () => {\n  const { user } = useSelector((state) => ({ ...state }));\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    loadUserOrders();\n  }, []);\n\n  const loadUserOrders = () =>\n    getUserOrders(user.token).then((res) => {\n      console.log(JSON.stringify(res.data, null, 4));\n      setOrders(res.data);\n    });\n\n  const showOrderInTable = (order) => (\n    <table className=\"table table-bordered table-responsive\">\n      <thead className=\"thead-light\">\n        <tr>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Brand</th>\n          <th scope=\"col\">Color</th>\n          <th scope=\"col\">Count</th>\n          <th scope=\"col\">Shipping</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {order.products.map((p, i) => (\n          <tr key={i}>\n            <td>{p.product.title}</td>\n            <td>{p.product.price}</td>\n            <td>{p.product.brand}</td>\n            <td>{p.color}</td>\n            <td>{p.count}</td>\n            <td>\n              {p.product.shipping === \"Yes\" ? (\n                <CheckCircleOutlined style={{ color: \"green\" }} />\n              ) : (\n                <CloseCircleOutlined style={{ color: \"red\" }} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  const showDownloadLink = (order) => (\n    <PDFDownloadLink\n      document={<Invoice order={order} />}\n      fileName={`invoice-${order.paymentIntent.id}.pdf`}\n      className=\"btn btn-sm btn-block btn-outline-primary\"\n    >\n      Download PDF\n    </PDFDownloadLink>\n  );\n\n  const showEachOrders = () =>\n    orders.reverse().map((order, i) => (\n      <Card key={i} className=\"m-1 p-2\">\n        <ShowPaymentInfo order={order} />\n        {showOrderInTable(order)}\n        <div className=\"row\">\n          <div className=\"col\">\n            {showDownloadLink(order)}\n          </div>\n        </div>\n      </Card>\n    ));\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <UserNav />\n        </div>\n        <div className=\"col\">\n          <h4>\n            {orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}\n          </h4>\n          {showEachOrders()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/category/CategoryUpdate.js",["429"],"import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getCategory, updateCategory } from \"../../../functions/category\";\nimport CategoryForm from './../../../components/forms/CategoryForm';\n\nconst CategoryUpdate = ({ history, match }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [name, setName] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        loadCategory();\n    }, []);\n\n    const loadCategory = () =>\n        getCategory(match.params.slug).then((c) => setName(c.data.name));\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(name);\n        setLoading(true);\n        updateCategory(match.params.slug, { name }, user.token)\n            .then((res) => {\n                // console.log(res)\n                setLoading(false);\n                setName(\"\");\n                toast.success(`\"${res.data.name}\" is updated`);\n                history.push(\"/admin/category\");\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoading(false);\n                if (err.response.status === 400) toast.error(err.response.data);\n            });\n    };\n\n    /*     const categoryForm = () => (\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        onChange={(e) => setName(e.target.value)}\n                        value={name}\n                        autoFocus\n                        required\n                    />\n                    <br />\n                    <button className=\"btn btn-outline-primary\">Save</button>\n                </div>\n            </form>\n        ); */\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col\">\n                    {loading ? (\n                        <h4 className=\"text-danger\">Loading..</h4>\n                    ) : (\n                            <h4>Update category</h4>\n                        )}\n                    <CategoryForm\n                        handleSubmit={handleSubmit}\n                        name={name}\n                        setName={setName}\n                    />\n                    <hr />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CategoryUpdate;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/category/CategoryCreate.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/sub/SubCreate.js",["430"],"import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getCategories } from \"../../../functions/category\";\nimport { createSub, getSub, removeSub, getSubs } from \"../../../functions/sub\";\nimport { Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\n\nconst SubCreate = () => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [name, setName] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [category, setCategory] = useState(\"\");\n    const [subs, setSubs] = useState([]);\n    // step 1\n    const [keyword, setKeyword] = useState(\"\");\n\n    useEffect(() => {\n        loadCategories();\n        loadSubs();\n    }, []);\n\n    const loadCategories = () => getCategories().then((c) => setCategories(c.data));\n\n    const loadSubs = () => getSubs().then((s) => setSubs(s.data));\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(name);\n        setLoading(true);\n        createSub({ name, parent: category }, user.token)\n            .then((res) => {\n                // console.log(res)\n                setLoading(false);\n                setName(\"\");\n                toast.success(`\"${res.data.name}\" is created`);\n                loadSubs();\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoading(false);\n                if (err.response.status === 400) toast.error(err.response.data);\n            });\n    };\n\n    const handleRemove = async (slug) => {\n        // let answer = window.confirm(\"Delete?\");\n        // console.log(answer, slug);\n        if (window.confirm(\"Delete?\")) {\n            setLoading(true);\n            removeSub(slug, user.token)\n                .then((res) => {\n                    setLoading(false);\n                    toast.error(`${res.data.name} deleted`);\n                    loadSubs();\n                })\n                .catch((err) => {\n                    if (err.response.status === 400) {\n                        setLoading(false);\n                        toast.error(err.response.data);\n                    }\n                });\n        }\n    };\n\n    // step 4\n    const searched = (keyword) => (c) => c.name.toLowerCase().includes(keyword);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col\">\n                    {loading ? (\n                        <h4 className=\"text-danger\">Loading..</h4>\n                    ) : (\n                        <h4>Create sub category</h4>\n                    )}\n\n                    <div className=\"form-group\">\n                        <label>Parent category</label>\n                        <select\n                            name=\"category\"\n                            className=\"form-control\"\n                            onChange={(e) => setCategory(e.target.value)}\n                        >\n                            <option>Please select</option>\n                            {categories.length > 0 &&\n                                categories.map((c) => (\n                                    <option key={c._id} value={c._id}>\n                                        {c.name}\n                                    </option>\n                                ))}\n                        </select>\n                    </div>\n\n                    {/* {JSON.stringify(category)} */}\n\n                    <CategoryForm\n                        handleSubmit={handleSubmit}\n                        name={name}\n                        setName={setName}\n                    />\n\n                    {/* step 2 and step 3 */}\n                    <LocalSearch keyword={keyword} setKeyword={setKeyword} />\n\n                    {/* step 5 */}\n                    {subs.filter(searched(keyword)).map((s) => (\n                        <div className=\"alert alert-secondary\" key={s._id}>\n                            {s.name}\n                            <span\n                                onClick={() => handleRemove(s.slug)}\n                                className=\"btn btn-sm float-right\"\n                            >\n                                <DeleteOutlined className=\"text-danger\" />\n                            </span>\n                            <Link to={`/admin/sub/${s.slug}`}>\n                                <span className=\"btn btn-sm float-right\">\n                                    <EditOutlined className=\"text-warning\" />\n                                </span>\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SubCreate;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/user/Wishlist.js",["431","432"],"import React, { useState, useEffect } from \"react\";\nimport UserNav from \"../../components/nav/UserNav\";\nimport { getWishlist, removeWishlist } from \"../../functions/user\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nconst Wishlist = () => {\n    const [wishlist, setWishlist] = useState([]);\n    const { user } = useSelector((state) => ({ ...state }));\n\n    useEffect(() => {\n        loadWishlist();\n    }, []);\n\n    const loadWishlist = () =>\n        getWishlist(user.token).then((res) => {\n            // console.log(res);\n            setWishlist(res.data.wishlist);\n        });\n\n    const handleRemove = (productId) =>\n        removeWishlist(productId, user.token).then((res) => {\n            loadWishlist();\n        });\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <UserNav />\n                </div>\n                <div className=\"col\">\n                    <h4>Wishlist</h4>\n                    {wishlist.map((p) => (\n                        <div key={p._id} className=\"alert alert-secondary\">\n                            <Link to={`/product/${p.slug}`}>{p.title}</Link>\n                            <span\n                                onClick={() => handleRemove(p._id)}\n                                className=\"btn btn-sm float-right\"\n                            >\n                                <DeleteOutlined className=\"text-danger\" />\n                            </span>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Wishlist;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/generation/GenerationUpdate.js",["433","434","435","436","437"],"import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getBrands } from \"../../../functions/brand\";\nimport { updateGeneration, getGeneration } from \"../../../functions/generation\";\nimport { Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport BrandForm from \"../../../components/forms/BrandForm\";\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\n\nconst GenerationUpdate = ({ match, history }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [name, setName] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [brands, setBrands] = useState([]);\n    const [parent, setParent] = useState(\"\");\n\n    useEffect(() => {\n        loadBrands();\n        loadGeneration();\n    }, []);\n\n    const loadBrands = () =>\n        getBrands().then((b) => setBrands(b.data));\n\n    const loadGeneration = () =>\n        getGeneration(match.params.slug).then((g) => {\n            setName(g.data.name);\n            setParent(g.data.parent);\n        });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(name);\n        setLoading(true);\n        updateGeneration(match.params.slug, { name, parent }, user.token)\n            .then((res) => {\n                // console.log(res)\n                setLoading(false);\n                setName(\"\");\n                toast.success(`\"${res.data.name}\" is updated`);\n                history.push(\"/admin/generation\");\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoading(false);\n                if (err.response.status === 400) toast.error(err.response.data);\n            });\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col\">\n                    {loading ? (\n                        <h4 className=\"text-danger\">Loading..</h4>\n                    ) : (\n                            <h4>Update รุ่น</h4>\n                        )}\n\n                    <div className=\"form-group\">\n                        <label>Parent brand</label>\n                        <select\n                            name=\"brand\"\n                            className=\"form-control\"\n                            onChange={(e) => setParent(e.target.value)}\n                        >\n                            <option>Please select</option>\n                            {brands.length > 0 &&\n                                brands.map((b) => (\n                                    <option key={b._id} value={b._id} selected={b._id === parent}>\n                                        {b.name}\n                                    </option>\n                                ))}\n                        </select>\n                    </div>\n\n                    <BrandForm\n                        handleSubmit={handleSubmit}\n                        name={name}\n                        setName={setName}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GenerationUpdate;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/brand/BrandUpdate.js",["438"],"import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getBrand, updateBrand } from \"../../../functions/brand\";\nimport BrandForm from '../../../components/forms/BrandForm';\n\nconst BrandUpdate = ({ history, match }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [name, setName] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        loadBrand();\n    }, []);\n\n    const loadBrand = () =>\n        getBrand(match.params.slug).then((b) => setName(b.data.name));\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(name);\n        setLoading(true);\n        updateBrand(match.params.slug, { name }, user.token)\n            .then((res) => {\n                // console.log(res)\n                setLoading(false);\n                setName(\"\");\n                toast.success(`\"${res.data.name}\" is updated`);\n                history.push(\"/admin/brand\");\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoading(false);\n                if (err.response.status === 400) toast.error(err.response.data);\n            });\n    };\n\n    /*     const brandForm = () => (\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label>Name</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        onChange={(e) => setName(e.target.value)}\n                        value={name}\n                        autoFocus\n                        required\n                    />\n                    <br />\n                    <button className=\"btn btn-outline-primary\">Save</button>\n                </div>\n            </form>\n        ); */\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col\">\n                    {loading ? (\n                        <h4 className=\"text-danger\">Loading..</h4>\n                    ) : (\n                            <h4>Update brand</h4>\n                        )}\n                    <BrandForm\n                        handleSubmit={handleSubmit}\n                        name={name}\n                        setName={setName}\n                    />\n                    <hr />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BrandUpdate;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/generation/GenerationCreate.js",["439"],"import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getBrands } from \"../../../functions/brand\";\nimport { createGeneration, getGeneration, removeGeneration, getGenerations } from \"../../../functions/generation\";\nimport { Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport BrandForm from \"../../../components/forms/BrandForm\";\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\n\nconst GenerationCreate = () => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [name, setName] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [brands, setBrands] = useState([]);\n    const [brand, setBrand] = useState(\"\");\n    const [generations, setGenerations] = useState([]);\n    // step 1\n    const [keyword, setKeyword] = useState(\"\");\n\n    useEffect(() => {\n        loadBrands();\n        loadGenerations();\n    }, []);\n\n    const loadBrands = () =>\n        getBrands().then((b) => setBrands(b.data));\n\n    const loadGenerations = () => getGenerations().then((g) => setGenerations(g.data));\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(name);\n        setLoading(true);\n        createGeneration({ name, parent: brand }, user.token)\n            .then((res) => {\n                // console.log(res)\n                setLoading(false);\n                setName(\"\");\n                toast.success(`\"${res.data.name}\" is created`);\n                loadGenerations();\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoading(false);\n                if (err.response.status === 400) toast.error(err.response.data);\n            });\n    };\n\n    const handleRemove = async (slug) => {\n        // let answer = window.confirm(\"Delete?\");\n        // console.log(answer, slug);\n        if (window.confirm(\"Delete?\")) {\n            setLoading(true);\n            removeGeneration(slug, user.token)\n                .then((res) => {\n                    setLoading(false);\n                    toast.error(`${res.data.name} deleted`);\n                    loadGenerations();\n                })\n                .catch((err) => {\n                    if (err.response.status === 400) {\n                        setLoading(false);\n                        toast.error(err.response.data);\n                    }\n                });\n        }\n    };\n\n    // step 4\n    const searched = (keyword) => (s) => s.name.toLowerCase().includes(keyword);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col\">\n                    {loading ? (\n                        <h4 className=\"text-danger\">Loading..</h4>\n                    ) : (\n                            <h4>Create รุ่น</h4>\n                        )}\n\n                    <div className=\"form-group\">\n                        <label>Parent รุ่น</label>\n                        <select\n                            name=\"brand\"\n                            className=\"form-control\"\n                            onChange={(e) => setBrand(e.target.value)}\n                        >\n                            <option>Please select</option>\n                            {brands.length > 0 &&\n                                brands.map((b) => (\n                                    <option key={b._id} value={b._id}>\n                                        {b.name}\n                                    </option>\n                                ))}\n                        </select>\n                    </div>\n\n                    {/* {JSON.stringify(brand)} */}\n\n                    <BrandForm\n                        handleSubmit={handleSubmit}\n                        name={name}\n                        setName={setName}\n                    />\n\n                    {/* step 2 and step 3 */}\n                    <LocalSearch keyword={keyword} setKeyword={setKeyword} />\n\n                    {/* step 5 */}\n                    {generations.filter(searched(keyword)).map((g) => (\n                        <div className=\"alert alert-secondary\" key={g._id}>\n                            {g.name}\n                            <span\n                                onClick={() => handleRemove(g.slug)}\n                                className=\"btn btn-sm float-right\"\n                            >\n                                <DeleteOutlined className=\"text-danger\" />\n                            </span>\n                            <Link to={`/admin/generation/${g.slug}`}>\n                                <span className=\"btn btn-sm float-right\">\n                                    <EditOutlined className=\"text-warning\" />\n                                </span>\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GenerationCreate;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/sub/SubHome.js",["440"],"import React, { useState, useEffect } from \"react\";\nimport { getSub } from \"../../functions/sub\";\nimport ProductCard from \"../../components/cards/ProductCard\";\n\nconst SubHome = ({ match }) => {\n    const [sub, setSub] = useState({});\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const { slug } = match.params;\n\n    useEffect(() => {\n        setLoading(true);\n        getSub(slug).then((res) => {\n            console.log(JSON.stringify(res.data, null, 4));\n            setSub(res.data.sub);\n            setProducts(res.data.products);\n            setLoading(false);\n        });\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    {loading ? (\n                    <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\n                        Loading...\n                    </h4>\n                    ) : (\n                    <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\n                        {products.length} Products in \"{sub.name}\" sub category\n                    </h4>\n                    )}\n                </div>\n            </div>\n\n            <div className=\"row\">\n                {products.map((p) => (\n                <div className=\"col\" key={p._id}>\n                    <ProductCard product={p} />\n                </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default SubHome;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/brand/BrandCreate.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/category/CategoryHome.js",["441"],"import React, { useState, useEffect } from \"react\";\nimport { getCategory } from \"../../functions/category\";\n//import { Link } from \"react-router-dom\";\nimport ProductCard from \"../../components/cards/ProductCard\";\n//import CategoryList from \"../../components/category/CategoryList\";\n\nconst CategoryHome = ({ match }) => {\n    const [category, setCategory] = useState({});\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const { slug } = match.params;\n\n    useEffect(() => {\n        setLoading(true);\n        getCategory(slug).then((res) => {\n            console.log(JSON.stringify(res.data, null, 4));\n            setCategory(res.data.category);\n            setProducts(res.data.products);\n            setLoading(false);\n        });\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n            <div className=\"col\">\n                {loading ? (\n                <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\n                    Loading...\n                </h4>\n                ) : (\n                <h4 className=\"text-center p-3 mt-5 mb-5 display-4 jumbotron\">\n                    {products.length} Products in \"{category.name}\" category\n                </h4>\n                )}\n            </div>\n            </div>\n    \n            <div className=\"row\">\n            {products.map((p) => (\n                <div className=\"col-3\" key={p._id}>\n                    <ProductCard product={p} />\n                </div>\n                ))}\n            </div>\n            </div>\n        );\n};\n\nexport default CategoryHome;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/coupon/CreateCouponPage.js",["442"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport DatePicker from \"react-datepicker\";\nimport {\n    getCoupons,\n    removeCoupon,\n    createCoupon,\n} from \"../../../functions/coupon\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\n\nconst CreateCouponPage = () => {\n    const [name, setName] = useState(\"\");\n    const [expiry, setExpiry] = useState(\"\");\n    const [discount, setDiscount] = useState(\"\");\n    const [loading, setLoading] = useState(\"\");\n    const [coupons, setCoupons] = useState([]);\n\n    // redux\n    const { user } = useSelector((state) => ({ ...state }));\n\n    useEffect(() => {\n        loadAllCoupons();\n    }, []);\n\n    const loadAllCoupons = () => getCoupons().then((res) => setCoupons(res.data));\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        // console.table(name, expiry, discount);\n        createCoupon({ name, expiry, discount }, user.token)\n            .then((res) => {\n                setLoading(false);\n                loadAllCoupons(); // load all coupons\n                setName(\"\");\n                setDiscount(\"\");\n                setExpiry(\"\");\n                toast.success(`\"${res.data.name}\" is created`);\n            })\n            .catch((err) => console.log(\"create coupon err\", err));\n    };\n\n    const handleRemove = (couponId) => {\n        if (window.confirm(\"Delete?\")) {\n            setLoading(true);\n            removeCoupon(couponId, user.token)\n                .then((res) => {\n                    loadAllCoupons(); // load all coupons\n                    setLoading(false);\n                    toast.error(`Coupon \"${res.data.name}\" deleted`);\n                })\n                .catch((err) => console.log(err));\n        }\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col-md-10\">\n                    {loading ? (\n                        <h4 className=\"text-danger\">Loading...</h4>\n                    ) : (\n                        <h4>Coupon</h4>\n                    )}\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group\">\n                                    <label className=\"text-muted\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={(e) => setName(e.target.value)}\n                                        value={name}\n                                        autoFocus\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group\">\n                                    <label className=\"text-muted\">Discount %</label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        onChange={(e) => setDiscount(e.target.value)}\n                                        value={discount}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"form-group\">\n                                    <label className=\"text-muted\">Expiry</label>\n                                    <br />\n                                    <DatePicker\n                                        className=\"form-control\"\n                                        selected={new Date()}\n                                        value={expiry}\n                                        onChange={(date) => setExpiry(date)}\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <button className=\"btn btn-outline-primary\">Save</button>\n                    </form>\n\n                    <br />\n                    <h4>{coupons.length} Coupons</h4>\n                    <table className=\"table table-bordered\">\n                        <thead className=\"thead-light\">\n                            <tr>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Expiry</th>\n                                <th scope=\"col\">Discount</th>\n                                <th scope=\"col\">Action</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {coupons.map((c) => (\n                                <tr key={c._id}>\n                                    <td>{c.name}</td>\n                                    <td>{new Date(c.expiry).toLocaleDateString()}</td>\n                                    <td>{c.discount}%</td>\n                                    <td>\n                                        <DeleteOutlined\n                                            onClick={() => handleRemove(c._id)}\n                                            className=\"text-danger pointer\"\n                                        />\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CreateCouponPage;","/Users/somkiatjaidee/code/elec-app/client/src/functions/auth.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/sub/SubUpdate.js",["443","444","445","446","447"],"import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getCategories } from \"../../../functions/category\";\nimport { updateSub, getSub } from \"../../../functions/sub\";\nimport { Link } from \"react-router-dom\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CategoryForm from \"../../../components/forms/CategoryForm\";\nimport LocalSearch from \"../../../components/forms/LocalSearch\";\n\nconst SubUpdate = ({ match, history }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n\n    const [name, setName] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [categories, setCategories] = useState([]);\n    const [parent, setParent] = useState(\"\");\n\n    useEffect(() => {\n        loadCategories();\n        loadSub();\n    }, []);\n\n    const loadCategories = () =>\n        getCategories().then((c) => setCategories(c.data));\n\n    const loadSub = () =>\n        getSub(match.params.slug).then((s) => {\n            setName(s.data.name);\n            setParent(s.data.parent);\n        });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(name);\n        setLoading(true);\n        updateSub(match.params.slug, { name, parent }, user.token)\n            .then((res) => {\n                // console.log(res)\n                setLoading(false);\n                setName(\"\");\n                toast.success(`\"${res.data.name}\" is updated`);\n                history.push(\"/admin/sub\");\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoading(false);\n                if (err.response.status === 400) toast.error(err.response.data);\n            });\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col\">\n                    {loading ? (\n                        <h4 className=\"text-danger\">Loading..</h4>\n                    ) : (\n                            <h4>Update sub category</h4>\n                        )}\n\n                    <div className=\"form-group\">\n                        <label>Parent category</label>\n                        <select\n                            name=\"category\"\n                            className=\"form-control\"\n                            onChange={(e) => setParent(e.target.value)}\n                        >\n                            <option>Please select</option>\n                            {categories.length > 0 &&\n                                categories.map((c) => (\n                                    <option key={c._id} value={c._id} selected={c._id === parent}>\n                                        {c.name}\n                                    </option>\n                                ))}\n                        </select>\n                    </div>\n\n                    <CategoryForm\n                        handleSubmit={handleSubmit}\n                        name={name}\n                        setName={setName}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SubUpdate;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/ProductUpdate.js",["448","449","450","451","452","453","454","455","456","457"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getProduct, updateProduct, saveContent, saveDetail } from \"../../../functions/product\";\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\nimport { getBrands, getBrandGenerations } from \"../../../functions/brand\";\nimport FileUpload from \"../../../components/forms/FileUpload\";\nimport ProductUpdateForm from \"../../../components/forms/ProductUpdateForm\";\n\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\n\nconst initialState = {\n    title: \"\",\n    description: \"\",\n    price: \"\",\n    category: \"\",\n    subs: [],\n    shipping: \"\",\n    quantity: \"\",\n    images: [],\n    colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\", \"Red\", \"Green\"],\n    brands: [\"No Brand\", \"Espressif\", \"Atmel\", \"Phillips\", \"Microchip\", \"Analog Device\", \"STMicroelectronics\", \"Parallax\", \"Cypress\", \"Texas Intruments\", \"Motorola\", \"Zilog\", \"Rabbit Semiconductor\", \"Renesas\",\n        \"Sumsung\", \"Panasonic\", \"Sony\", \"Acer\", \"Apple\", \"Aston\", \"Dell\", \"Fujifilm\", \"GoPro\", \"HP\", \"JBL\", \"Lenovo\", \"LG\", \"Microsoft\", \"Sandisk\", \"WD\", \"Zotac\"],\n    brand: \"\",\n    color: \"\",\n    //generations: []\n};\n\nconst ProductUpdate = ({ match, history }) => {\n    const [loading, setLoading] = useState(false);\n    const { user } = useSelector((state) => ({ ...state }));\n    // state\n    const [values, setValues] = useState(initialState);\n    const [categories, setCategories] = useState([]);\n    const [subOptions, setSubOptions] = useState([]);\n    const [arrayOfSubs, setArrayOfSubs] = useState([]);\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\n    const [brands, setBrands] = useState([]);                           //\n    const [generationOptions, setGenerationOptions] = useState([]);     //\n    const [arrayOfGenerations, setArrayOfGenerations] = useState([]);   //\n    const [selectedBrand, setSelectedBrand] = useState(\"\");             //\n\n\n\n\n\n    // router\n    const { slug } = match.params;\n\n    useEffect(() => {\n        loadProduct();\n        loadCategories();\n        loadBrands();\n    }, []);\n\n    const loadProduct = () => {\n        getProduct(slug).then((p) => {\n            // console.log(\"single product\", p);\n            // 1 load single proudct\n            setValues({ ...values, ...p.data });\n            // 2 load single product category subs\n            getCategorySubs(p.data.category._id).then((res) => {\n                setSubOptions(res.data); // on first load, show default subs\n            });\n            // 3 prepare array of sub ids to show as default sub values in antd Select\n            let arr = [];\n            p.data.subs.map((s) => {\n                arr.push(s._id);\n            });\n            console.log(\"ARR\", arr);\n            setArrayOfSubs((prev) => arr); // required for ant design select to work\n\n            if (p.data.content != null) {\n                setContent(p.data.content);  //กำหนดค่าให้ content\n            }\n\n            if (p.data.detail != null) {\n                setDetail(p.data.detail);  //กำหนดค่าให้ detail\n            }\n        });\n    };\n\n    const loadCategories = () =>\n        getCategories().then((c) => {\n            console.log(\"GET CATEGORIES IN UPDATE PRODUCT\", c.data);\n            setCategories(c.data);\n        });\n\n    const loadBrands = () =>\n        getBrands().then((b) => {\n            console.log(\"GET BRANDS IN UPDATE PRODUCT\", b.data);\n            setBrands(b.data);\n        });\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        values.subs = arrayOfSubs;\n        values.category = selectedCategory ? selectedCategory : values.category;\n        //  values.generations = arrayOfGenerations; //\n        //  values.brand = selectedBrand ? selectedBrand : values.brand; //\n\n        updateProduct(slug, values, user.token)\n            .then((res) => {\n                setLoading(false);\n                toast.success(`\"${res.data.title}\" is updated`);\n                history.push(\"/admin/products\");\n                localStorage.removeItem(\"content\");\n                localStorage.removeItem(\"detail\");\n            })\n            .catch((err) => {\n                console.log(err);\n                setLoading(false);\n                toast.error(err.response.data.err);\n            });\n    };\n\n    const handleChange = (e) => {\n        setValues({ ...values, [e.target.name]: e.target.value });\n        // console.log(e.target.name, \" ----- \", e.target.value);\n    };\n\n    const handleCategoryChange = (e) => {\n        e.preventDefault();\n        console.log(\"CLICKED CATEGORY\", e.target.value);\n        //setValues({ ...values, subs: [], category: e.target.value });\n        setValues({ ...values, subs: [] });\n\n        setSelectedCategory(e.target.value);\n\n        getCategorySubs(e.target.value).then((res) => {\n            console.log(\"SUB OPTIONS ON CATEGORY CLICK\", res);\n            setSubOptions(res.data);\n        });\n\n        console.log(\"EXISTING CATEGORY values.category\", values.category);\n        // if user clicks back to the original category\n        // show its sub categories in default\n        if (values.category._id === e.target.value) {\n            loadProduct();\n        }\n        // clear old sub category ids\n        setArrayOfSubs([]);\n    };\n\n    /*    \n        const handleBrandChange = (e) => {\n            e.preventDefault();\n            console.log(\"CLICKED BRAND\", e.target.value);\n            //setValues({ ...values, subs: [], category: e.target.value });\n            setValues({ ...values, generations: [] });\n    \n            setSelectedBrand(e.target.value);\n    \n            getBrandGenerations(e.target.value).then((res) => {\n                console.log(\"GENERATION OPTIONS ON BRAND CLICK\", res);\n                setGenerationOptions(res.data);\n            });\n    \n            console.log(\"EXISTING BRAND values.brand\", values.brand);\n            // if user clicks back to the original category\n            // show its sub categories in default\n            if (values.brand._id === e.target.value) {\n                loadProduct();\n            }\n            // clear old sub category ids\n            setArrayOfGenerations([]);\n        };    \n    */\n\n\n    const contentFromLS = () => {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (localStorage.getItem('content')) {\n            return JSON.parse(localStorage.getItem('content'));\n        } else {\n            return false;\n        }\n    };\n    const [content, setContent] = useState(contentFromLS());\n\n    const saveContentToDB = () => {\n        //console.log(slug, content);\n        saveContent(slug, content).then((res) => {\n            if (res.data.ok) {\n                // setLoading(false);\n                setContent(true);\n                toast.success(\"content saved\");\n                history.push(`/admin/product/${slug}`);\n                //localStorage.removeItem(\"content\");\n            }\n        });\n    };\n    const handleContent = (e) => {\n        //console.log(e);\n        setContent(e);\n        if (typeof window !== 'undefined') {\n            localStorage.setItem('content', JSON.stringify(e));\n        }\n    };\n\n    const detailFromLS = () => {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (localStorage.getItem('detail')) {\n            return JSON.parse(localStorage.getItem('detail'));\n        } else {\n            return false;\n        }\n    };\n    const [detail, setDetail] = useState(detailFromLS());\n\n    const saveDetailToDB = () => {\n        //console.log(slug, detail);\n        saveDetail(slug, detail).then((res) => {\n            if (res.data.ok) {\n                //  setLoading(false);\n                setDetail(true);\n                toast.success(\"detail saved\");\n                history.push(`/admin/product/${slug}`);\n                //localStorage.removeItem(\"detail\");\n            }\n        });\n    };\n    const handleDetail = (e) => {\n        setDetail(e);\n        if (typeof window !== 'undefined') {\n            localStorage.setItem('detail', JSON.stringify(e));\n        }\n    };\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n\n                <div className=\"col-md-10\">\n                    {loading ? (\n                        <LoadingOutlined className=\"text-danger h1\" />\n                    ) : (\n                        <h4>Product update</h4>\n                    )}\n                    {/* {JSON.stringify(values)} */}\n                    <div className=\"p-3\">\n                        <FileUpload\n                            values={values}\n                            setValues={setValues}\n                            setLoading={setLoading}\n                        />\n\n                    </div>\n                    <br />\n                    <ProductUpdateForm\n                        handleSubmit={handleSubmit}\n                        handleChange={handleChange}\n                        setValues={setValues}\n                        values={values}\n                        handleCategoryChange={handleCategoryChange}\n                        categories={categories}\n                        subOptions={subOptions}\n                        arrayOfSubs={arrayOfSubs}\n                        setArrayOfSubs={setArrayOfSubs}\n                        selectedCategory={selectedCategory}\n\n                    /*   \n                        handleBrandChange={handleBrandChange}\n                        brands={brands}\n                        generationOptions={generationOptions}\n                        arrayOfGenerations={arrayOfGenerations}\n                        setArrayOfGenerations={setArrayOfGenerations}\n                        selectedBrand={selectedBrand}  \n                    */\n                    />\n\n                    <div className=\"pt-4\">\n                        <ReactQuill theme=\"snow\" value={content} onChange={handleContent} />\n                        <Button className=\"mt-2\" onClick={saveContentToDB} type=\"primary\" ghost>\n                            บันทึก Description\n                        </Button>\n                    </div>\n\n                    <div className=\"pt-4\">\n                        <ReactQuill theme=\"snow\" value={detail} onChange={handleDetail} />\n                        <Button className=\"mt-2\" onClick={saveDetailToDB} type=\"primary\" ghost>\n                            บันทึก More\n                        </Button>\n                    </div>\n\n                    <Link to={`/admin/product-content/${slug}`} className=\"btn btn-primary\"> เพิ่ม Description </Link>\n                    <Link to={`/admin/product-detail/${slug}`} className=\"btn btn-primary\">เพิ่ม More</Link>\n                    <br />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductUpdate;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/AllProducts.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/ProductCreate.js",["458"],"import React, { useState, useEffect } from \"react\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { createProduct } from \"../../../functions/product\";\nimport ProductCreateForm from \"../../../components/forms/ProductCreateForm\";\nimport { getCategories, getCategorySubs } from \"../../../functions/category\";\nimport { getBrands, getBrandGenerations } from \"../../../functions/brand\";\nimport FileUpload from \"../../../components/forms/FileUpload\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nconst initialState = {\n  title: \"\",\n  descriptioin: \"\",\n  price: \"\",\n  categories: [],\n  category: \"\",\n  subs: [],\n  shipping: \"\",\n  quantity: \"\",\n  images: [],\n  colors: [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\", \"Red\", \"Green\"],\n  color: \"\",\n  brands: [\"No Brand\",\"Espressif\", \"Atmel\", \"Phillips\", \"Microchip\", \"Analog Device\", \"STMicroelectronics\", \"Parallax\", \"Cypress\", \"Texas Intruments\", \"Motorola\", \"Zilog\", \"Rabbit Semiconductor\", \"Renesas\",\n    \"Sumsung\", \"Panasonic\", \"Sony\", \"Acer\", \"Apple\", \"Aston\", \"Dell\", \"Fujifilm\", \"GoPro\", \"HP\", \"JBL\", \"Lenovo\", \"LG\", \"Microsoft\", \"Sandisk\", \"WD\", \"Zotac\"],\n  // brands: [],\n  brand: \"\",\n  generations: [],\n};\n\nconst ProductCreate = () => {\n  const [values, setValues] = useState(initialState);\n  const [subOptions, setSubOptions] = useState([]);\n  const [showSub, setShowSub] = useState(false);\n  const [generationOptions, setGenerationOptions] = useState([]);\n  const [showGeneration, setShowGeneration] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [brands, setBrands] = useState(initialState);  //เพิ่ม\n\n  // redux\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadCategories();\n    loadBrands();\n  }, []);\n\n  const loadCategories = () =>\n    getCategories().then((c) => setValues({ ...values, categories: c.data }));\n\n  const loadBrands = () =>\n    getBrands().then((b) => setBrands({ ...brands, brands: b.data }));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    createProduct(values, user.token)\n      .then((res) => {\n        console.log(res);\n        window.alert(`\"${res.data.title}\" is created`);\n        window.location.reload();\n      })\n      .catch((err) => {\n        console.log(err);\n        // if (err.response.status === 400) toast.error(err.response.data);\n        toast.error(err.response.data.err);\n      });\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n    // console.log(e.target.name, \" ----- \", e.target.value);\n  };\n\n  const handleCategoryChange = (e) => {\n    e.preventDefault();\n    console.log(\"CLICKED CATEGORY\", e.target.value);\n    setValues({ ...values, subs: [], category: e.target.value });\n    getCategorySubs(e.target.value).then((res) => {\n      console.log(\"SUB OPTIONS ON CATEGORY CLICK\", res);\n      setSubOptions(res.data);\n    });\n    setShowSub(true);\n  };\n\n  const handleBrandChange = (e) => {\n    e.preventDefault();\n    console.log(\"CLICKED BRAND\", e.target.value);\n    setValues({ ...values, generations: [], brand: e.target.value });\n    getBrandGenerations(e.target.value).then((res) => {\n      console.log(\"GENERATION OPTIONS ON BRAND CLICK\", res);\n      setGenerationOptions(res.data);\n    });\n    setShowGeneration(true);\n  };\n\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <AdminNav />\n        </div>\n        <div className=\"col-md-10\">\n          {loading ? (\n            <LoadingOutlined className=\"text-danger h1\" />\n          ) : (\n            <h4>Product create</h4>\n          )}\n          <hr />\n\n          {/* {JSON.stringify(values.images)} */}\n          <div className=\"p-3\">\n            <FileUpload\n              values={values}\n              setValues={setValues}\n              setLoading={setLoading}\n            />\n          </div>\n\n          <ProductCreateForm\n            handleSubmit={handleSubmit}\n            handleChange={handleChange}\n            setValues={setValues}\n            values={values}\n            handleCategoryChange={handleCategoryChange}\n            subOptions={subOptions}\n            showSub={showSub}\n            handleBrandChange={handleBrandChange}\n            generationOptions={generationOptions}\n            showGeneration={showGeneration}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCreate;\n","/Users/somkiatjaidee/code/elec-app/client/src/reducers/userReducer.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/about/Shipping.js",["459","460","461","462"],"import React from 'react';\n\nconst Shipping = () => {\n    return (\n        <div className=\"container\">\n            <h2>การจัดส่งสินค้า</h2>\n            <h4>การจัดส่งสินค้าและค่าขนส่ง</h4>\n            <h5>เขตกรุงเทพฯ และปริมณฑล (นนทบุรี สมุทรปราการ ปทุมธานี และสมุทรสาคร) และพื้นที่ต่างจัดหวัด ทั่วประเทศ</h5>\n            <p>\n                - จัดส่งฟรีเมื่อซื้อสินค้ารวมครบ 250 บาท / รายการสั่งซื้อ <br />\n                - ซื้อสินค้ามูลค่ารวมไม่ถึง 250 บาท / รายการสั่งซื้อ  ค่าจัดส่งเริ่มต้นที่ 25 บาท <br />\n            </p>\n            <h4>  ระยะเวลาการจัดส่งสินค้า</h4>\n            <p>\n                - หลังจากทางบริษัทฯ ได้รับยืนยันรายการสั่งซื้อจากทางลูกค้าแล้ว บริษัทฯ จะจัดส่งสินค้า ให้ถึงมือลูกค้าโดยเร็วที่สุด โดยลูกค้าจะได้รับสินค้า ภายใน 1 – 3 วันทำการ (ไม่รวมวันเสาร์ – อาทิตย์ และวันหยุดนักขัตฤกษ์) <br/>\n                - บริษัทฯ ให้บริการจัดส่งสินค้าในเวลาทำการ วันจันทร์ – ศุกร์ (จัดส่งทั่วประเทศ) ช่วงเวลา 10:00 น. – 17:00 น. และวันเสาร์ – อาทิตย์ (จัดส่งเฉพาะเขตกรุงเทพฯ และปริมณฑล) ช่วงเวลา 11.00 – 15.00 น. (ยกเว้นวันหยุดนักขัตฤกษ์) <br/>\n                - หมายเหตุ*: ระยะเวลาการจัดส่ง ขึ้นอยู่กับระยะทางในการขนส่งด้วย <br/>\n            </p>\n            <h4>ขนส่งที่เราใช้บริการ</h4>\n            <p>\n                <img src=\"./shipping_kerry.jpg\" />\n                <img src=\"./shipping_jnt.jpg\" />\n                <img src=\"./shipping_thaipost.jpg\" />\n                <img src=\"./shipping_flash2.jpg\" style={{maxHeight:\"120px\"}} />\n            </p>\n        </div>\n    );\n};\n\nexport default Shipping;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/about/Policy.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/reducers/cartReducer.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/reducers/searchReducer.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/reducers/CODReducer.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/reducers/drawerReducer.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/about/ReturnRefund.js",["463"],"import React from 'react';\n\nconst ReturnRefund = () => {\n    return (\n        <div className=\"container\">\n            <h3> ข้อตกลงและเงื่อนไขการเปลี่ยน / คืนสินค้า และการคืนเงิน </h3>\n            <p> บริษัทยินดีรับเปลี่ยน / คืนสินค้า ภายใน 7 วันหลังจากได้รับสินค้า โดยสินค้าและบรรจุภัณฑ์ต้องเป็นไปตามเงื่อนไขที่กำหนดด้านล่าง มิฉะนั้น บริษัทฯ ขอสงวนสิทธิ์ในการรับเปลี่ยน / คืนสินค้าในทุกกรณี</p>\n            <p><img src=\"./return-refund.png\" className=\"img-fluid\" /></p>\n            <h5> ความเสียหายของสินค้าที่ไม่อยู่ในเงื่อนไขการเปลี่ยน / คืนสินค้า และการคืนเงิน</h5>\n            <p>\n                <ul>\n                    <li> สินค้าที่ชำรุด แตก หัก บุบ ไหม้ บิ่น งอ เบี้ยว ร้าว ทะลุ มีรอยขูดขีดที่แผงวงจร อุปกรณ์บางส่วนหลุดหายไป ซึ่งไม่ได้เกิดขึ้นจากรูปแบบการใช้งานปกติตามข้อกำหนดการใช้งานของสินค้าที่ได้ถูกระบุไว้ในคู่มือการใช้งาน หรือเอกสารแสดงรายการสินค้าที่อยู่ในบรรจุภัณฑ์ </li>\n                    <li>สินค้าที่มีสภาพผิดปกติซึ่งไม่ควรเกิดขึ้นเอง หรือการเก็บรักษาอย่างไม่ถูกต้อง เช่น คราบกาว คราบออกไซด์ คราบน้ำ คราบมูลสัตว์ รอยสนิม เป็นต้น </li>\n                    <li>สินค้าที่เกิดความเสียหายสืบเนื่องมาจากการนำอุปกรณ์อื่นใดมาต่อพ่วง การซ่อมแซมหรือดัดแปลงอย่างไม่ถูกต้อง หรือการใช้อะไหล่อื่นทดแทน </li>\n                    <li>สินค้าที่เกิดความเสียหายจากอุบัติเหตุ ภัยธรรมชาติ (ฟ้าผ่า น้ำท่วม ไฟไหม้ แผ่นดินไหว) จากแมลงและสัตว์ </li>\n                    <li>ทางบริษัทฯ ขอปฎิเสธการรับคืนสินค้า ในกรณีที่ลูกค้ามีความไม่พึงพอใจในสินค้า แต่สินค้าได้ถูกแกะกล่อง หรือนำไปใช้งานแล้ว </li>\n                    <li>บริษัทฯ ขอสงวนสิทธิ์ในการเปลี่ยนแปลง แก้ไข เงื่อนไขการเปลี่ยน / คืนสินค้า และคืนเงิน โดยมิต้องแจ้งให้ทราบล่วงหน้า </li>\n                </ul>\n            </p>\n            <h5>หมายเหตุ</h5>\n            <p>\n                <ul>\n                    <li>ในการเปลี่ยน / คืนสินค้า ลูกค้าต้องส่งสินค้ากลับคืนมายังบริษัทฯ ภายใน 7 วัน นับจากวันที่ได้รับสินค้าตามวันที่ประทับตราขนส่ง หากเกินจากระยะเวลาที่กำหนด บริษัทฯ ขอสงวนสิทธิ์ในการรับเปลี่ยน / คืนสินค้าในทุกกรณี </li>\n                    <li>ในกรณีที่ลูกค้ามิได้ส่งสินค้ากลับมายังบริษัทฯ ทางบริษัทฯ ขอสงวนสิทธิ์ในการดำเนินการเปลี่ยนสินค้าหรือคืนเงินให้แก่ลูกค้า </li>\n                    <li>การอนุมัติให้สามารถเปลี่ยนหรือคืนสินค้าได้ จะต้องผ่านการตรวจสอบจากทางบริษัทฯ ก่อนในทุกกรณี </li>\n                    <li>ทางบริษัทฯ จะใช้เวลาตรวจสอบสินค้า ใน 2 - 7 วันทำการ (โดยประมาณ) หลังจากวันที่ได้รับสินค้าคืนจากลูกค้า </li>\n                    <li> ในกรณีที่ทางบริษัทฯ ได้รับและตรวจสอบสินค้าแล้วพบว่าสินค้าไม่ได้มีความเสียหายเกิดขึ้น บริษัทฯ ขอสงวนสิทธิ์ในการเปลี่ยน / คืนสินค้า และจะจัดส่งสินค้าชิ้นเดิมคืนให้แก่ลูกค้า </li>\n                    <li>กรณีสินค้ามีปัญหาหลังระยะเวลา 7 วัน แต่ยังอยู่ในช่วงระยะเวลารับประกัน กรุณาติดต่อเจ้าของผลิตภัณฑ์ ตามเอกสารใบประกันสินค้า </li>\n                </ul>\n            </p>\n            <h5>ค่าใช้จ่ายในการส่งคืนสินค้า</h5>\n            <p>\n                ทางบริษัทจะรับผิดชอบค่าขนส่งในการคืนสินค้า เฉพาะในกรณีที่เป็นผลอันเนื่องมาจากข้อผิดพลาดของทางบริษัท เท่านั้น\n                <ul>\n                    <li>กรณีจัดส่งจากเขตกรุงเทพฯ และปริมณฑล (นนทบุรี ปทุมธานี สมุทรปราการ และสมุทรสาคร)  ไม่เกิน 150 บาท / รายการสั่งซื้อ </li>\n                    <li>กรณีจัดส่งจากพื้นที่ต่างจัดหวัด ทั่วประเทศ  ไม่เกิน 300 บาท / รายการสั่งซื้อ </li>\n                </ul>\n            </p>\n            <h5>เงื่อนไขการคืนเงิน</h5>\n            <p>\n                <h6>กรณียกเลิกรายการสั่งซื้อก่อนการจัดส่งสินค้า</h6>\n                <ul>\n                    <li> กรณีชำระเงินผ่านบัตรเครดิต/เดบิต, ผ่อนชำระ หากมีการยกเลิกรายการสั่งซื้อภายในวันที่สั่งซื้อ บริษัทฯ จะแจ้ง void เงินคืนให้แก่ลูกค้า หากเลยระยะเวลาการ void คืน บริษัทฯ จะแจ้ง refund ไปทางธนาคาร เพื่อยกเลิกรายการดังกล่าว ระยะเวลาดำเนินการเป็นไปตามธนาคารเจ้าของบัตรกำหนด </li>\n                    <li>กรณีชำระเงินผ่านบัญชีธนาคารออนไลน์ และช่องทางอื่น ๆ บริษัทฯ จะขอข้อมูลบัญชีลูกค้า เพื่อทำเรื่องคืนเงินไปยังบัญชีลูกค้า ภายใน 15 วันทำการ </li>\n                </ul>\n                <h6>กรณีขอคืนสินค้า-เงินคืนหลังได้รับสินค้าแล้วภายใน 7 วัน </h6>\n                <ul>\n                    <li>กรณีชำระเงินผ่านบัตรเครดิต/เดบิต, ผ่อนชำระ บริษัทฯ จะประสานงานกับทางธนาคารเจ้าของบัตร เพื่อทำเรื่องคืนวงเงินไปยังบัตรเครดิต/เดบิตของลูกค้า โดยระยะเวลาเป็นไปตามธนาคารเจ้าของบัตรกำหนด </li>\n                    <li>กรณีชำระเงินผ่านบัญชีธนาคารออนไลน์, เก็บเงินปลายทาง และช่องทางอื่นๆ บริษัทฯ จะขอข้อมูลบัญชีลูกค้า เพื่อทำเรื่องคืนเงินไปยังบัญชีลูกค้า ภายใน 15 วันทำการ </li>\n                </ul>\n            </p>\n            <h5>ขั้นตอนการเปลี่ยน / คืนสินค้า</h5>\n            <p>\n                <ol>\n                    <li>แจ้งปัญหาสินค้าและความต้องการเปลี่ยนหรือคืนสินค้า โทร.  092-806-4949 หรือทางอีเมล ที่ eleclabs@gmail.com </li>\n                    <li>รอรับการยืนยัน โดยจะมีเจ้าหน้าที่ติดต่อกลับทางโทรศัพท์ เพื่อยืนยันความต้องการในการเปลี่ยนหรือคืนสินค้า </li>\n                    <li>กรุณาจัดส่งสินค้า พร้อมกล่องสินค้า, ใบรับประกันและเอกสาร, อุปกรณ์ทุกชิ้นที่ได้รับ รวมถึงของแถมตามโปรโมชั่น ตลอดจนใบเสร็จรับเงินและใบกำกับภาษี กลับมาที่\n                        เลขที่ 486/25 ถ.เลียบคลองฯฝั่งเหนือ แขวงหนองแขม เขตหนองแขม กรุงเทพมหานคร 10160 </li>\n                    <li>หลังจากบริษัทฯ ได้รับและตรวจสอบสินค้าแล้ว หากถูกต้อง ครบถ้วน และเป็นไปตามเงื่อนไข บริษัทฯ จะจัดส่งสินค้าชิ้นใหม่ ภายใน 3 วันทำการ ในกรณีคืนสินค้า บริษัทฯ จะดำเนินการคืนเงินให้ลูกค้า ภายใน 15 วันทำการ </li>\n                </ol>\n\n\n            </p>\n        </div>\n    );\n};\n\nexport default ReturnRefund;\n\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/about/OrderCancel.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/reducers/couponReducer.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/drawer/SideDrawer.js",["464","465","466"],"import React from \"react\";\nimport { Drawer, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport laptop from \"../../images/noimg.jpg\";\n\nconst SideDrawer = () => {\n    const dispatch = useDispatch();\n    const { drawer, cart } = useSelector((state) => ({ ...state }));\n\n    const imageStyle = {\n        width: \"100%\",\n        height: \"50px\",\n        objectFit: \"cover\",\n    };\n\n\n    return (\n        <Drawer\n            className=\"text-center\"\n            title={`Cart / ${cart.length} Product`}\n            placement=\"right\"\n            closable={false}\n            onClose={() => {\n                dispatch({\n                    type: \"SET_VISIBLE\",\n                    payload: false,\n                });\n            }}\n            visible={drawer}\n        >\n            {cart.map((p) => (\n                <div key={p._id} className=\"row\">\n                    <div className=\"col\">\n                        {p.images[0] ? (\n                            <>\n                                <img src={p.images[0].url} style={imageStyle} />\n                                <p className=\"text-center bg-secondary text-light\">\n                                    {p.title} x {p.count}\n                                </p>\n                            </>\n                        ) : (\n                            <>\n                                <img src={laptop} style={imageStyle} />\n                                <p className=\"text-center bg-secondary text-light\">\n                                    {p.title} x {p.count}\n                                </p>\n                            </>\n                        )}\n                    </div>\n                </div>\n            ))}\n\n            <Link to=\"/cart\">\n                <button\n                    onClick={() =>\n                        dispatch({\n                            type: \"SET_VISIBLE\",\n                            payload: false,\n                        })\n                    }\n                    className=\"text-center btn btn-primary btn-raised btn-block\"\n                >\n                    Go To Cart\n                </button>\n            </Link>\n        </Drawer>\n    )\n};\n\nexport default SideDrawer;","/Users/somkiatjaidee/code/elec-app/client/src/components/nav/Header.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/routes/UserRoute.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/nav/Footer.js",["467"],"import React from 'react';\nimport {\n    FacebookOutlined,\n    TwitterOutlined,\n    GoogleOutlined,\n    InstagramOutlined,\n    LinkedinOutlined,\n    GithubOutlined,\n    HomeOutlined,\n    MailOutlined,\n    PhoneOutlined,\n} from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\n\nlet blue = \"#6610f2\"\n\nconst Footer = () => {\n    return (\n        <>\n            <footer className=\"text-lg-start bg-light text-muted\">\n                <section className=\"d-flex justify-content-center justify-content-lg-between p-3 border-bottom\">\n                    <div className=\"d-none d-lg-block\">\n                        <span style={{fontSize:\"20px\"}}>ติดตามเราทางช่องทาง social network:</span>\n                    </div>\n                    <div>\n                        <a href style={{ color: \"#3498DB\", paddingLeft: \"10px\", fontSize:\"24px\" }}>\n                            <FacebookOutlined />\n                        </a>\n                        <a href style={{ color: \"#85C1E9\", paddingLeft: \"10px\", fontSize:\"24px\" }}>\n                            <TwitterOutlined />\n                        </a>\n                        <a href style={{ color: \"#E74C3C\", paddingLeft: \"10px\", fontSize:\"24px\" }}>\n                            <GoogleOutlined />\n                        </a>\n                        <a href style={{ color: \"#9B59B6\", paddingLeft: \"10px\", fontSize:\"24px\" }}>\n                            <InstagramOutlined />\n                        </a>\n                        <a href style={{ color: \"#148F77\", paddingLeft: \"10px\", fontSize:\"24px\" }}>\n                            <LinkedinOutlined />\n                        </a>\n                        <a href style={{ color: \"#2E4053\", paddingLeft: \"10px\", fontSize:\"24px\" }}>\n                            <GithubOutlined />\n                        </a>\n                    </div>\n                </section>\n                <section>\n                    <div className=\"container text-md-start mt-4\">\n                        <div className=\"row mt-3\">\n                            <div className=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-3\">\n                                <h6 className=\"text-uppercase fw-bold mb-3\">Description</h6>\n                                <p>\n                                    จำหน่ายอุปกรณ์อิเล็กทรอนิกส์ ไมโครคอนโทรลเลอร์ สมองกลฝังตัว  Internet of Things  Sensor หุ่นยนต์ และชุดควบคุม Module Board\n                                    NodeMCU, ESP32, ESP8266, Arduino, Sensor PIC AVR\n                                    (สินค้าโกดังในไทย ส่งถึงลูกค้าภายใน 1-3 วัน)\n                                </p>\n                            </div>\n                            <div className=\"col-md-2 col-6 col-xl-2 mx-auto mb-3\">\n                                <h6 className=\"text-uppercase fw-bold mb-3\">Products</h6>\n                                <p className=\"mb-1\"><a href=\"./#categories\" className=\"text-reset\">ประเภทสินค้า</a></p>\n                                <p className=\"mb-1\"><a href=\"./#new-arrivals\" className=\"text-reset\">สินค้าใหม่</a></p>\n                                <p className=\"mb-1\"><a href=\"./#best-sellers\" className=\"text-reset\">สินค้าขายดี</a></p>\n                            </div>\n                            <div className=\"col-md-3 col-6 col-xl-2 mx-auto mb-3\">\n                                <h6 className=\"text-uppercase fw-bold mb-3\">About us</h6>\n                                <p className=\"mb-1\"><Link to=\"/shipping\" className=\"text-reset\">การจัดส่งสินค้า</Link></p>\n                                <p className=\"mb-1\"><Link to=\"/return-refund\" className=\"text-reset\">การคืนสินค้า/คืนเงิน</Link></p>\n                                <p className=\"mb-1\"><Link to=\"/order-cancel\" className=\"text-reset\">การยกเลิกการสั่งซื้อ</Link></p>\n                                <p className=\"mb-1\"><Link to=\"/policy\" className=\"text-reset\">นโยบายและเงื่อนไข</Link></p>\n                            </div>\n                            <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-3\">\n                                <h6 className=\"text-uppercase fw-bold mb-3\">Contact</h6>\n                                <p className=\"mb-2\"><HomeOutlined /> 486/25 ถนนเลียบคลองฯฝั่งเหนือ แขวงหนองแขม เขตหนองแขม กรุงเทพมหานคร 10160</p>\n                                <p className=\"mb-1\"><MailOutlined /> eleclabs@gmail.com</p>\n                                <p className=\"mb-1\"><PhoneOutlined /> 0928064949</p>\n                                <p className=\"mb-1\">ID Line: mcu.bz</p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n                <div className=\"text-center p-3\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}>\n                    © 2022 Copyright:\n                    <a className=\"text-reset fw-bold\" href=\"https://elec.app/\">elec.app</a>\n                </div>\n            </footer>\n        </>\n    )\n}\n\n\n\nexport default Footer;\n\n\n\n","/Users/somkiatjaidee/code/elec-app/client/src/components/routes/AdminRoute.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/sub.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/user.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/brand.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/product.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/category.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/cards/Jumbotron.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/home/BestSellers.js",["468"],"import React, { useEffect, useState } from \"react\";\nimport { getProducts, getProductsCount } from \"../../functions/product\";\nimport ProductCard from \"../cards/ProductCard\";\nimport LoadingCard from \"../cards/LoadingCard\";\nimport { Pagination } from \"antd\";\n\nconst BestSellers = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [productsCount, setProductsCount] = useState(0);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        loadAllProducts();\n    }, [page]);\n\n    useEffect(() => {\n        getProductsCount().then((res) => setProductsCount(res.data));\n    }, []);\n\n    const loadAllProducts = () => {\n        setLoading(true);\n        // sort, order, limit\n        getProducts(\"sold\", \"desc\", page).then((res) => {\n            setProducts(res.data);\n            setLoading(false);\n        });\n    };\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                {loading ? (\n                    <LoadingCard count={8} />  //3\n                ) : (\n                        <div className=\"row\">\n                            {products.map((product) => (\n                                <div key={product._id} className=\"col-md-3 col-6 mt-3 p-1\">\n                                    <ProductCard product={product} />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n            </div>\n\n            <div className=\"row\">\n                <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\n                    <Pagination\n                        current={page}\n                        total={(productsCount / 8) * 10}  //3*10\n                        onChange={(value) => setPage(value)}\n                    />\n                </nav>\n            </div>\n        </>\n    );\n};\n\nexport default BestSellers;","/Users/somkiatjaidee/code/elec-app/client/src/components/category/CategoryList.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/sub/SubList.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/cards/ProductCard.js",["469","470","471","472","473","474","475"],"import React, { useState } from \"react\";\nimport { Card, Tooltip } from \"antd\";\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\nimport NoImg from \"../../images/noimg.jpg\";\nimport { Link } from \"react-router-dom\";\nimport { showAverage } from \"../../functions/rating\";\nimport _ from \"lodash\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst { Meta } = Card;\n\nconst ProductCard = ({ product }) => {\n    const [tooltip, setTooltip] = useState(\"Click to add\");\n\n    // redux\n    const { user, cart } = useSelector((state) => ({ ...state }));\n    const dispatch = useDispatch();\n\n    const handleAddToCart = () => {\n        // create cart array\n        let cart = [];\n        if (typeof window !== \"undefined\") {\n            // if cart is in local storage GET it\n            if (localStorage.getItem(\"cart\")) {\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\n            }\n            // push new product to cart\n            cart.push({\n                ...product,\n                count: 1,\n            });\n            // remove duplicates\n            let unique = _.uniqWith(cart, _.isEqual);\n            // save to local storage\n            // console.log('unique', unique)\n            localStorage.setItem(\"cart\", JSON.stringify(unique));\n            // show tooltip\n            setTooltip(\"Added\");\n            // add to reeux state\n            dispatch({\n                type: \"ADD_TO_CART\",\n                payload: unique,\n            });\n            // show cart items in side drawer\n            dispatch({\n                type: \"SET_VISIBLE\",\n                payload: true,\n            });\n        }\n    };\n\n    // destructure\n    const { images, title, description, slug, price, quantity, sold } = product;\n    return (\n        <>\n            {/* {product && product.ratings && product.ratings.length > 0 ? (\n                showAverage(product)\n            ) : (\n                <div className=\"text-center pt-1 pb-3\">No rating yet</div>\n            )} */}\n            <Card\n            \n                cover={\n                    <Link to={`/product/${slug}`}>\n                        <img\n                            src={images && images.length ? images[0].url : NoImg}\n                            style={{ maxWidth: \"220px\", objectFit: \"cover\" }}\n                            className=\"p-1\"\n                        />\n                    </Link>\n                }\n\n                actions={[\n                    <Link to={`/product/${slug}`}>\n                        <EyeOutlined className=\"text-warning\" /> <br /> View Product\n                    </Link>,\n                    <Tooltip title={tooltip}>\n                        <a onClick={handleAddToCart} disabled={product.quantity < 1}>\n                            <ShoppingCartOutlined className=\"text-danger\" /> <br />\n                            {product.quantity < 1 ? \"Out of stock\" : \"Add to Cart\"}\n                        </a></Tooltip>,\n                ]}\n            >\n\n                {/* <Meta\n                    title={`${title} - ฿${price}`}\n                    description={`${description && description.substring(0, 70)}...`}\n                /> */}\n\n                <div>{`${title && title.substring(0, 40)}`}</div>\n                <div className=\"d-flex justify-content-center justify-content-between pt-2\">\n                    <div style={{ color: \"#FF6600\" }}>{`฿${price}`}</div>\n                    <div style={{ color: \"#888888\" }}>{product.sold < 1 ? \"  \" : `ขายแล้ว ${sold} ชิ้น`}</div>\n                </div>\n\n                <div className=\"d-flex justify-content-center justify-content-between pt-2\">\n                    <div></div>\n                    {product && product.ratings && product.ratings.length > 0 ? (\n                        showAverage(product)\n                    ) : (\n                        <div className=\"text-center\">No rating yet</div>\n                    )}\n\n                </div>\n            </Card>\n        </>\n    );\n}\n\nexport default ProductCard;","/Users/somkiatjaidee/code/elec-app/client/src/components/home/NewArrivals.js",["476"],"import React, { useEffect, useState } from \"react\";\nimport { getProducts, getProductsCount } from \"../../functions/product\";\nimport ProductCard from \"../cards/ProductCard\";\nimport LoadingCard from \"../cards/LoadingCard\";\nimport { Pagination } from \"antd\";\n\nconst NewArrivals = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [productsCount, setProductsCount] = useState(0);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        loadAllProducts();\n    }, [page]);\n\n    useEffect(() => {\n        getProductsCount().then((res) => setProductsCount(res.data));\n    }, []);\n\n    const loadAllProducts = () => {\n        setLoading(true);\n        // sort, order, limit\n        getProducts(\"createdAt\", \"desc\", page).then((res) => {\n            setProducts(res.data);\n            setLoading(false);\n        });\n    };\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                {loading ? (\n                    <LoadingCard count={3} />   //3\n                ) : (\n                        <div className=\"row\">\n                            {products.map((product) => (\n                                <div key={product._id} className=\"col-md-3 col-6 mt-3 p-1\">\n                                    <ProductCard product={product} />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n            </div>\n\n            <div className=\"row\">\n                <nav className=\"col-md-4 offset-md-4 text-center pt-5 p-3\">\n                    <Pagination\n                        current={page}\n                        total={(productsCount / 12) * 10}   //3*10\n                        onChange={(value) => setPage(value)}\n                    />\n                </nav>\n            </div>\n        </>\n    );\n};\n\nexport default NewArrivals;\n","/Users/somkiatjaidee/code/elec-app/client/src/components/routes/LoadingToRedirect.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/forms/FileUpload.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/forms/Search.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/forms/ProductCreateForm.js",["477","478","479","480","481","482"],"import React from \"react\";\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nconst ProductCreateForm = ({\n  handleSubmit,\n  handleChange,\n  setValues,\n  values,\n  handleCategoryChange,\n  subOptions,\n  showSub,\n\n  handleBrandChange,\n  generationOptions,\n  showGeneration,\n\n}) => {\n  // destructure\n  const {\n    title,\n    description,\n    price,\n    categories,\n    category,\n    subs,\n    shipping,\n    quantity,\n    images,\n    colors,\n    brands,\n    color,\n    brand,\n    generations,\n  } = values;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"form-group\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"form-control\"\n              value={title}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"form-group\">\n            <label>Category({categories.length})</label>\n            <select\n              name=\"category\"\n              className=\"form-control\"\n              onChange={handleCategoryChange}\n            >\n              <option>Please select</option>\n              {categories.length > 0 &&\n                categories.map((c) => (\n                  <option key={c._id} value={c._id}>\n                    {c.name}\n                  </option>\n                ))}\n            </select>\n          </div>\n        </div>\n        {showSub && (\n          <div className=\"col\">\n            <label>Sub Categories({subOptions.length})</label>\n            <Select\n              mode=\"multiple\"\n              style={{ width: \"100%\" }}\n              placeholder=\"Please select\"\n              value={subs}\n              onChange={(value) => setValues({ ...values, subs: value })}\n            >\n              {subOptions.length &&\n                subOptions.map((s) => (\n                  <Option key={s._id} value={s._id}>\n                    {s.name}\n                  </Option>\n                ))}\n            </Select>\n          </div>\n        )}\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"form-group\">\n            <label>Price</label>\n            <input\n              type=\"number\"\n              name=\"price\"\n              className=\"form-control\"\n              value={price}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-3\">\n          <div className=\"form-group\">\n            <label>Quantity</label>\n            <input\n              type=\"number\"\n              name=\"quantity\"\n              className=\"form-control\"\n              value={quantity}\n              onChange={handleChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"col-2\">\n          <div className=\"form-group\">\n            <label>Color</label>\n            <select name=\"color\" className=\"form-control\" onChange={handleChange}>\n              <option>Please select</option>\n              {colors.map((c) => (\n                <option key={c} value={c}>\n                  {c}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"col-2\">\n          <div className=\"form-group\">\n            <label>Brand({brands.length})</label>\n            <select name=\"brand\" className=\"form-control\" onChange={handleChange}>\n              <option>Please select</option>\n              {brands.map((b) => (\n                <option key={b} value={b}>\n                  {b}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <div className=\"col-2\">\n          <div className=\"form-group\">\n            <label>Shipping</label>\n            <select\n              name=\"shipping\"\n              className=\"form-control\"\n              onChange={handleChange}\n            >\n              <option>Please select</option>\n              <option value=\"No\">No</option>\n              <option value=\"Yes\">Yes</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* \n      <div className=\"form-group\">\n        <label>Brand {brands.length}</label>\n        <select\n          name=\"brand\"\n          className=\"form-control\"\n          onChange={handleBrandChange}\n        >\n          <option>Please select </option>\n          {brands.length > 0 &&\n            brands.map((b) => (\n              <option key={b._id} value={b._id}>\n                {b.name}\n              </option>\n            ))}\n        </select>\n      </div> \n\n       {showGeneration && (\n        <div>\n          <label>รุ่น {generationOptions.length}</label>\n          <Select\n            mode=\"multiple\"\n            style={{ width: \"100%\" }}\n            placeholder=\"Please select\"\n            value={generations}\n            onChange={(value) => setValues({ ...values, generations: value })}\n          >\n            {generationOptions.length &&\n              generationOptions.map((g) => (\n                <Option key={g._id} value={g._id}>\n                  {g.name}\n                </Option>\n              ))}\n          </Select>\n        </div>\n      )} \n  */}\n\n      <div className=\"form-group\">\n        <label>Description</label>\n        <textarea\n          rows=\"5\"\n          type=\"text\"\n          name=\"description\"\n          className=\"form-control\"\n          value={description}\n          onChange={handleChange}\n        />\n      </div>\n      <br />\n      <button className=\"btn btn-outline-info btn-lg\">Save</button>\n    </form>\n\n  );\n};\n\nexport default ProductCreateForm;\n","/Users/somkiatjaidee/code/elec-app/client/src/components/nav/AdminNav.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/cards/AdminProductCard.js",["483","484","485"],"import React from \"react\";\nimport { Card } from \"antd\";\nimport NoImg from \"../../images/noimg.jpg\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nconst { Meta } = Card;\n\nconst AdminProductCard = ({ product, handleRemove }) => {\n    // destructure\n    const { title, description, images, slug, price, sold, quantity } = product;\n\n    return (\n        <Card\n            cover={\n                <img\n                    src={images && images.length ? images[0].url : NoImg}\n                    style={{ height: \"150px\", objectFit: \"cover\" }}\n                    className=\"p-1\"\n                />\n            }\n            actions={[\n                <Link to={`/admin/product/${slug}`}>\n                    <EditOutlined className=\"text-warning\" />\n                </Link>,\n                <DeleteOutlined\n                    className=\"text-danger\"\n                    onClick={() => handleRemove(slug)}\n                />,\n            ]}\n        >\n            {/* <Meta\n                title={`${title} - ฿${price}`}\n                description={`${description && description.substring(0, 40)}...`}\n            /> */}\n            <div>{title}</div>\n            <div className=\"d-flex justify-content-center justify-content-between pt-2\">\n                <div style={{color:\"#FF6600\"}}>{`฿${price}`}</div>\n                <div style={{ color: \"#888888\" }}>{product.sold < 1 ? `${sold} Sold (${quantity} Qty)` : `${sold} Sold (${quantity} Qty)` }</div>\n            </div>\n            \n            \n        </Card>\n    );\n};\n\nexport default AdminProductCard;","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/ProductUpdateForm.js",["486","487"],"import React from \"react\";\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nconst ProductUpdateForm = ({\n    handleSubmit,\n    handleChange,\n    setValues,\n    values,\n    handleCategoryChange,\n    categories,\n    subOptions,\n    arrayOfSubs,\n    setArrayOfSubs,\n    selectedCategory,\n\n    /*  \n      handleBrandChange,\n      brands,\n      generationOptions,\n      arrayOfGenerations,\n      setArrayOfGenerations,\n      selectedBrand,  \n    */\n\n}) => {\n    // destructure\n    const {\n        title,\n        description,\n        price,\n        category,\n        subs,\n        shipping,\n        quantity,\n        images,\n        colors,\n        brands,\n        color,\n        brand,\n        //generations,\n    } = values;\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <input\n                                type=\"text\"\n                                name=\"title\"\n                                className=\"form-control\"\n                                value={title}\n                                onChange={handleChange}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"form-group\">\n                            <label>Price</label>\n                            <input\n                                type=\"number\"\n                                name=\"price\"\n                                className=\"form-control\"\n                                value={price}\n                                onChange={handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-3\">\n                        <div className=\"form-group\">\n                            <label>Quantity</label>\n                            <input\n                                type=\"number\"\n                                name=\"quantity\"\n                                className=\"form-control\"\n                                value={quantity}\n                                onChange={handleChange}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-2\">\n                        <div className=\"form-group\">\n                            <label>Color</label>\n                            <select\n                                value={color}\n                                name=\"color\"\n                                className=\"form-control\"\n                                onChange={handleChange}\n                            >\n                                {colors.map((c) => (\n                                    <option key={c} value={c}>\n                                        {c}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-2\">\n                        <div className=\"form-group\">\n                            <label>Brand</label>\n                            <select\n                                value={brand}\n                                name=\"brand\"\n                                className=\"form-control\"\n                                onChange={handleChange}\n                            >\n                                {brands.map((b) => (\n                                    <option key={b} value={b}>\n                                        {b}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-2\">\n                        <div className=\"form-group\">\n                            <label>Shipping</label>\n                            <select\n                                value={shipping === \"Yes\" ? \"Yes\" : \"No\"}\n                                name=\"shipping\"\n                                className=\"form-control\"\n                                onChange={handleChange}\n                            >\n                                <option value=\"No\">No</option>\n                                <option value=\"Yes\">Yes</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n\n                {/*            \n             <div className=\"form-group\">\n                <label>ยี่ห้อ</label>\n                <select\n                    name=\"brand\"\n                    className=\"form-control\"\n                    onChange={handleBrandChange}\n                    value={selectedBrand ? selectedBrand : brand._id}\n                >\n                    {brands.length > 0 &&\n                        brands.map((b) => (\n                            <option key={b._id} value={b._id}>\n                                {b.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div>\n                <label>รุ่น</label>\n                <Select\n                    mode=\"multiple\"\n                    style={{ width: \"100%\" }}\n                    placeholder=\"Please select\"\n                    value={arrayOfGenerations}\n                    onChange={(value) => setArrayOfGenerations(value)}\n                >\n                    {generationOptions.length &&\n                        generationOptions.map((g) => (\n                            <Option key={g._id} value={g._id}>\n                                {g.name}\n                            </Option>\n                        ))}\n                </Select>\n            </div> */}\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"form-group\">\n                            <label>Category</label>\n                            <select\n                                name=\"category\"\n                                className=\"form-control\"\n                                onChange={handleCategoryChange}\n                                value={selectedCategory ? selectedCategory : category._id}\n                            >\n                                {categories.length > 0 &&\n                                    categories.map((c) => (\n                                        <option key={c._id} value={c._id}>\n                                            {c.name}\n                                        </option>\n                                    ))}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <div>\n                            <label>Sub Categories</label>\n                            <Select\n                                mode=\"multiple\"\n                                style={{ width: \"100%\" }}\n                                placeholder=\"Please select\"\n                                value={arrayOfSubs}\n                                onChange={(value) => setArrayOfSubs(value)}\n                            >\n                                {subOptions.length &&\n                                    subOptions.map((s) => (\n                                        <Option key={s._id} value={s._id}>\n                                            {s.name}\n                                        </Option>\n                                    ))}\n                            </Select>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Description</label>\n                    <textarea\n                        rows=\"5\"\n                        type=\"text\"\n                        name=\"description\"\n                        className=\"form-control\"\n                        value={description}\n                        onChange={handleChange}\n                    />\n                </div>\n                <button className=\"btn btn-outline-info btn-lg\">Save</button>\n            </form>\n        </div>\n    );\n};\n\nexport default ProductUpdateForm;\n","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/LocalSearch.js",["488","489"],"import React from 'react';\n\nconst LocalSearch = ({ keyword, setKeyword }) => {\n    {/* step3 */ }\n    const handleSearchChange = (e) => {\n        e.preventDefault();\n        setKeyword(e.target.value.toLowerCase());\n    };\n    {/* step2 */ }\n    return (\n        <input\n            type=\"search\"\n            placeholder=\"Filter\"\n            value={keyword}\n            onChange={handleSearchChange}\n            className=\"form-control mb-4\"\n        />\n    )\n}\n\nexport default LocalSearch;\n","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/CategoryForm.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/coupon.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/forms/BrandForm.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/generation.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/cards/LoadingCard.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/rating.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/nav/UserNav.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/cards/ShowPaymentInfo.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/cards/ProductCardInCheckout.js",["490","491","492","493"],"import React from \"react\";\nimport ModalImage from \"react-modal-image\";\nimport laptop from \"../../images/noimg.jpg\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport {\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\n\n\nconst ProductCardInCheckout = ({ p }) => {\n  const colors = [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\", \"Red\", \"Green\"];\n  let dispatch = useDispatch();\n\n  const handleColorChange = (e) => {\n    console.log(\"color changed\", e.target.value);\n\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n\n      cart.map((product, i) => {\n        if (product._id === p._id) {\n          cart[i].color = e.target.value;\n        }\n      });\n\n      //  console.log('cart udpate color', cart)\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  const handleQuantityChange = (e) => {\n    // console.log(\"available quantity\", p.quantity);\n    let count = e.target.value < 1 ? 1 : e.target.value;\n\n    if (count > p.quantity) {\n      toast.error(`Max available quantity: ${p.quantity}`);\n      return;\n    }\n\n    let cart = [];\n\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n\n      cart.map((product, i) => {\n        if (product._id == p._id) {\n          cart[i].count = count;\n        }\n      });\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  const handleRemove = () => {\n    // console.log(p._id, \"to remove\");\n    let cart = [];\n\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n      // [1,2,3,4,5]\n      cart.map((product, i) => {\n        if (product._id === p._id) {\n          cart.splice(i, 1);\n        }\n      });\n\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  return (\n    <tbody>\n      <tr>\n        <td>\n          <div style={{ width: \"100px\", height: \"auto\" }}>\n            {p.images.length ? (\n              <ModalImage small={p.images[0].url} large={p.images[0].url} />\n            ) : (\n              <ModalImage small={laptop} large={laptop} />\n            )}\n          </div>\n        </td>\n        <td>{p.title}</td>\n        <td>฿{p.price}</td>\n        <td>{p.brand}</td>\n        <td>\n          <select\n            onChange={handleColorChange}\n            name=\"color\"\n            className=\"form-control\"\n          >\n            {p.color ? (\n              <option value={p.color}>{p.color}</option>\n            ) : (\n              <option>Select</option>\n            )}\n            {colors\n              .filter((c) => c !== p.color)\n              .map((c) => (\n                <option key={c} value={c}>\n                  {c}\n                </option>\n              ))}\n          </select>\n        </td>\n        <td className=\"text-center\">\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            value={p.count}\n            onChange={handleQuantityChange}\n          />\n        </td>\n        <td className=\"text-center\">\n          {p.shipping === \"Yes\" ? (\n            <CheckCircleOutlined className=\"text-success\" />\n          ) : (\n            <CloseCircleOutlined className=\"text-danger\" />\n          )}\n        </td>\n        <td className=\"text-center\">\n          <CloseOutlined\n            onClick={handleRemove}\n            className=\"text-danger pointer\"\n          />\n        </td>\n      </tr>\n    </tbody>\n  );\n};\n\nexport default ProductCardInCheckout;\n","/Users/somkiatjaidee/code/elec-app/client/src/functions/admin.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/order/Invoice.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/order/Orders.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/cards/SingleProduct.js",["494","495","496","497","498"],"import React, { useState } from \"react\";\nimport renderHTML from 'react-render-html';\nimport { Card, Tabs, Tooltip } from \"antd\";\n//import { Link } from \"react-router-dom\";\nimport { HeartOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport NoImg from \"../../images/noimg.jpg\";\nimport ProductListItems from \"./ProductListItems\";\nimport MiniBestSellers from \"../home/MiniBestSellers\";\nimport StarRating from \"react-star-ratings\";\nimport RatingModal from \"../modal/RatingModal\";\nimport { showAverage } from \"../../functions/rating\";\nimport _ from \"lodash\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToWishlist } from \"../../functions/user\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\n/* const { Meta } = Card; */\nconst { TabPane } = Tabs;\n\n// this is childrend component of Product page\nconst SingleProduct = ({ product, onStarClick, star }) => {\n    const [tooltip, setTooltip] = useState(\"Click to add\");\n    // redux\n    const { user, cart } = useSelector((state) => ({ ...state }));\n    const dispatch = useDispatch();\n    // router\n    let history = useHistory();\n    const { title, description, images, _id, content, detail } = product;\n\n    const handleAddToCart = () => {\n        // create cart array\n        let cart = [];\n        if (typeof window !== \"undefined\") {\n            // if cart is in local storage GET it\n            if (localStorage.getItem(\"cart\")) {\n                cart = JSON.parse(localStorage.getItem(\"cart\"));\n            }\n            // push new product to cart\n            cart.push({\n                ...product,\n                count: 1,\n            });\n            // remove duplicates\n            let unique = _.uniqWith(cart, _.isEqual);\n            // save to local storage\n            // console.log('unique', unique)\n            localStorage.setItem(\"cart\", JSON.stringify(unique));\n            // show tooltip\n            setTooltip(\"Added\");\n            // add to reeux state\n            dispatch({\n                type: \"ADD_TO_CART\",\n                payload: unique,\n            });\n            // show cart items in side drawer\n            dispatch({\n                type: \"SET_VISIBLE\",\n                payload: true,\n            });\n        }\n    };\n\n    const handleAddToWishlist = (e) => {\n        e.preventDefault();\n        addToWishlist(product._id, user.token).then((res) => {\n            console.log(\"ADDED TO WISHLIST\", res.data);\n            toast.success(\"Added to wishlist\");\n            history.push(\"/user/wishlist\");\n        });\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-sm-7\">\n                    {images && images.length ? (\n                        <Carousel showArrows={true} autoPlay infiniteLoop>\n                            {images && images.map((i) => <img src={i.url} key={i.public_id} />)}\n                        </Carousel>\n                    ) : (\n                        <Card cover={<img src={NoImg} className=\"mb-2 card-image\" />}></Card>\n                    )}\n                </div>\n\n                <div className=\"col-sm-5\">\n                    <h5 className=\"bg-secondary text-white p-3\" style={{ borderRadius: \"10px\" }}>{title}</h5>\n\n                    {product && product.ratings && product.ratings.length > 0 ? (\n                        showAverage(product)\n                    ) : (\n                        <div className=\"text-center pt-1 pb-3\">No rating yet</div>\n                    )}\n\n                    <Card\n                        actions={[\n                            <Tooltip title={tooltip}>\n                                <a onClick={handleAddToCart}>\n                                    <ShoppingCartOutlined className=\"text-danger\" /> <br /> Add to\n                                    Cart\n                                </a>\n                            </Tooltip>,\n                            <a onClick={handleAddToWishlist}>\n                                <HeartOutlined className=\"text-info\" /> <br /> Add to Wishlist\n                            </a>,\n                            <RatingModal>\n                                <StarRating\n                                    name={_id}\n                                    numberOfStars={5}\n                                    rating={star}\n                                    changeRating={onStarClick}\n                                    isSelectable={true}\n                                    starRatedColor=\"red\"\n                                />\n                            </RatingModal>,\n                        ]}\n                    >\n                        {/*  <Meta description={description} /> */}\n                        <ProductListItems product={product} />\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-8\">\n                    <Tabs type=\"card\">\n                        <TabPane tab=\"Description\" key=\"1\">\n                            <b style={{ color: 'blue' }}>{description && description}</b>\n                            <br />\n                            {content && content.length ? (<div className=\"content\"> {renderHTML(content)} </div>) : (<div></div>)}\n                        </TabPane>\n                        <TabPane tab=\"More\" key=\"2\">\n                            {detail && detail.length ? (<div className=\"content\"> {renderHTML(detail)} </div>) : (<div></div>)}\n                        </TabPane>\n                    </Tabs>\n                </div>\n                <div className=\"col-md-4\">\n                    <h4 className=\"text-center p-3 mt-2 mb-2 display-4 jumbotron\">Best Sellers</h4>\n                    <MiniBestSellers />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SingleProduct;\n","/Users/somkiatjaidee/code/elec-app/client/src/components/StripeCheckout.js",["499","500"],"import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createPaymentIntent } from \"../functions/stripe\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"antd\";\nimport { DollarOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport Laptop from \"../images/noimg.jpg\";\nimport { createOrder, emptyUserCart } from \"../functions/user\";\n\nconst StripeCheckout = ({ history }) => {\n    const dispatch = useDispatch();\n    const { user, coupon } = useSelector((state) => ({ ...state }));\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [error, setError] = useState(null);\n    const [processing, setProcessing] = useState(\"\");\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(\"\");\n\n    const [cartTotal, setCartTotal] = useState(0);\n    const [totalAfterDiscount, setTotalAfterDiscount] = useState(0);\n    const [payable, setPayable] = useState(0);\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    useEffect(() => {\n        createPaymentIntent(user.token, coupon).then((res) => {\n            console.log(\"create payment intent\", res.data);\n            setClientSecret(res.data.clientSecret);\n            // additional response received on successful payment\n            setCartTotal(res.data.cartTotal);\n            setTotalAfterDiscount(res.data.totalAfterDiscount);\n            setPayable(res.data.payable);\n        });\n    }, []);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement),\n                billing_details: {\n                    name: e.target.name.value,\n                },\n            },\n        });\n\n        if (payload.error) {\n            setError(`Payment failed ${payload.error.message}`);\n            setProcessing(false);\n        } else {\n            // here you get result after successful payment\n            // create order and save in database for admin to process\n            createOrder(payload, user.token).then((res) => {\n                if (res.data.ok) {\n                    // empty cart from local storage\n                    if (typeof window !== \"undefined\") localStorage.removeItem(\"cart\");\n                    // empty cart from redux\n                    dispatch({\n                        type: \"ADD_TO_CART\",\n                        payload: [],\n                    });\n                    // reset coupon to false\n                    dispatch({\n                        type: \"COUPON_APPLIED\",\n                        payload: false,\n                    });\n                    // empty cart from database\n                    emptyUserCart(user.token);\n                }\n            });\n            // empty user cart from redux store and local storage\n            console.log(JSON.stringify(payload, null, 4));\n            setError(null);\n            setProcessing(false);\n            setSucceeded(true);\n        }\n    };\n\n    const handleChange = async (e) => {\n        // listen for changes in the card element\n        // and display any errors as the custoemr types their card details\n        setDisabled(e.empty); // disable pay button if errors\n        setError(e.error ? e.error.message : \"\"); // show error message\n    };\n\n    const cartStyle = {\n        style: {\n            base: {\n                color: \"#32325d\",\n                fontFamily: \"Arial, sans-serif\",\n                fontSmoothing: \"antialiased\",\n                fontSize: \"16px\",\n                \"::placeholder\": {\n                    color: \"#32325d\",\n                },\n            },\n            invalid: {\n                color: \"#fa755a\",\n                iconColor: \"#fa755a\",\n            },\n        },\n    };\n\n    return (\n        <>\n            {!succeeded && (\n                <div>\n                    {coupon && totalAfterDiscount !== undefined ? (\n                        <p className=\"alert alert-success\">{`Total after discount: $${totalAfterDiscount}`}</p>\n                    ) : (\n                        <p className=\"alert alert-danger\">No coupon applied</p>\n                    )}\n                </div>\n            )}\n\n            <div className=\"text-center pb-5\">\n                <Card\n                    cover={\n                        <img\n                            src={Laptop}\n                            style={{\n                                height: \"200px\",\n                                objectFit: \"cover\",\n                                marginBottom: \"-50px\",\n                            }}\n                        />\n                    }\n                    actions={[\n                        <>\n                            <DollarOutlined className=\"text-info\" /> <br /> Total: ฿\n                            {cartTotal}\n                        </>,\n                        <>\n                            <CheckOutlined className=\"text-info\" /> <br /> Total payable : ฿\n                            {(payable / 100).toFixed(2)}\n                        </>,\n                    ]}\n                />\n            </div>\n\n            <form id=\"payment-form\" className=\"stripe-form\" onSubmit={handleSubmit}>\n                <CardElement\n                    id=\"card-element\"\n                    options={cartStyle}\n                    onChange={handleChange}\n                />\n                <button\n                    className=\"stripe-button\"\n                    disabled={processing || disabled || succeeded}\n                >\n                    <span id=\"button-text\">\n                        {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\n                    </span>\n                </button>\n                <br />\n                {error && (\n                    <div className=\"card-error\" role=\"alert\">\n                        {error}\n                    </div>\n                )}\n                <br />\n                <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n                    Payment Successful.{\" \"}\n                    <Link to=\"/user/history\">See it in your purchase history.</Link>\n                </p>\n            </form>\n        </>\n    );\n};\n\nexport default StripeCheckout;\n","/Users/somkiatjaidee/code/elec-app/client/src/components/forms/Star.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/functions/stripe.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/cards/ProductListItems.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/components/modal/RatingModal.js",["501"],"import React, { useState } from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { StarOutlined } from \"@ant-design/icons\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst RatingModal = ({ children }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n    const [modalVisible, setModalVisible] = useState(false);\n\n    let history = useHistory();\n    let { slug } = useParams();\n\n    const handleModal = () => {\n        if (user && user.token) {\n            setModalVisible(true);\n        } else {\n            //history.push(\"/login\");\n            history.push({\n                pathname: \"/login\",\n                state: { from: `/product/${slug}` },\n            });\n        }\n    };\n\n    return (\n        <>\n            <div onClick={handleModal}>\n                <StarOutlined className=\"text-danger\" /> <br />{\" \"}\n                {user ? \"Leave rating\" : \"Login to leave rating\"}\n            </div>\n            <Modal\n                title=\"Leave your rating\"\n                centered\n                visible={modalVisible}\n                onOk={() => {\n                    setModalVisible(false);\n                    toast.success(\"Thanks for your review. It will apper soon\");\n                }}\n                onCancel={() => setModalVisible(false)}\n            >\n                {children}\n            </Modal>\n        </>\n    );\n};\n\nexport default RatingModal;\n","/Users/somkiatjaidee/code/elec-app/client/src/components/home/MiniBestSellers.js",["502"],"import React, { useEffect, useState } from \"react\";\nimport { getProducts, getProductsCount } from \"../../functions/product\";\nimport ProductCard from \"../cards/ProductCard\";\nimport LoadingCard from \"../cards/LoadingCard\";\nimport { Pagination } from \"antd\";\n\nconst MiniBestSellers = () => {\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [productsCount, setProductsCount] = useState(0);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        loadAllProducts();\n    }, [page]);\n\n    useEffect(() => {\n        getProductsCount().then((res) => setProductsCount(res.data));\n    }, []);\n\n    const loadAllProducts = () => {\n        setLoading(true);\n        // sort, order, limit\n        getProducts(\"sold\", \"desc\", page).then((res) => {\n            setProducts(res.data);\n            setLoading(false);\n        });\n    };\n\n    return (\n        <>\n            <div className=\"container-fluid\">\n                {loading ? (\n                    <LoadingCard count={3} />  //3\n                ) : (\n                        <div className=\"row\">\n                            {products.map((product) => (\n                                <div key={product._id} className=\"col-sm-6 mt-3 p-1\">\n                                    <ProductCard product={product} />\n                                </div>\n                            ))}\n                        </div>\n                    )}\n            </div>\n\n            <div className=\"row\">\n                <nav className=\"offset-md-4 text-center pt-2 p-3\">\n                    <Pagination\n                        current={page}\n                        total={(productsCount / 3) * 6}  //3*10\n                        onChange={(value) => setPage(value)}\n                    />\n                </nav>\n            </div>\n        </>\n    );\n};\n\nexport default MiniBestSellers;","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/ProductDetail.js",["503","504"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getProduct, saveDetail } from \"../../../functions/product\";\n\nimport ReactQuill from \"react-quill\";\n//import \"react-quill/dist/quill.snow.css\";\nimport { QuillModules, QuillFormats } from '../../../helpers/quill';\n\nconst ProductDetail = ({ match, history }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n    // state\n    const [title, setTitle] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n\n    const detailFromLS = () => {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (localStorage.getItem('detail')) {\n            return JSON.parse(localStorage.getItem('detail'));\n        } else {\n            return false;\n        }\n    };\n\n    const [detail, setDetail] = useState(detailFromLS);\n\n    // router\n    const { slug } = match.params;\n\n    useEffect(() => {\n        loadProduct();\n    }, []);\n\n\n    const loadProduct = () => {\n        getProduct(slug).then((p) => {\n            // console.log(\"single product\", p);\n            // 1 load single proudct\n            console.log('Product ', p.data.title)\n            setTitle(p.data.title);\n            setDetail(p.data.detail);\n        });\n    };\n\n\n    const saveDetailToDB = () => {\n        console.log(slug, detail);\n        saveDetail(slug, detail).then((res) => {\n            if (res.data.ok) {\n                setLoading(false);\n                setDetail(true);\n                toast.success(\"detail saved\");\n                history.push(`/admin/product/${slug}`);\n            }\n        });\n    };\n\n    const handleDetail = (e) => {\n        // setLoading(true);\n        console.log(e);\n        setDetail(e);\n        if (typeof window !== 'undefined') {\n            localStorage.setItem(`detail`, JSON.stringify(e));\n        }\n    };\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n\n                <div className=\"col-md-10\">\n                    {loading ? (\n                        <LoadingOutlined className=\"text-danger h1\" />\n                    ) : (\n                        <h4>Product More</h4>\n                    )}\n\n                    <form>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label>Title</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"title\"\n                                        className=\"form-control\"\n                                        value={title}\n                                        onChange={setTitle}\n                                        readOnly\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n\n                    <div>\n                        <ReactQuill\n                            modules={QuillModules}\n                            formats={QuillFormats}\n                            // theme=\"snow\" \n                            value={detail}\n                            onChange={handleDetail}\n                        />\n                        <Button className=\"mt-2\" onClick={saveDetailToDB} type=\"primary\" ghost>\n                            SAVE\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductDetail;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/admin/product/ProductContent.js",["505","506"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport AdminNav from \"../../../components/nav/AdminNav\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\nimport { getProduct, saveContent } from \"../../../functions/product\";\n\n//import dynamic from 'next/dynamic';\nimport ReactQuill from \"react-quill\";\n//import \"react-quill/dist/quill.snow.css\";\n//const ReactQuill = dynamic(() => import('react-quill'), { ssr: false });\nimport { QuillModules, QuillFormats } from '../../../helpers/quill';\n\nconst ProductContent = ({ match, history }) => {\n    const { user } = useSelector((state) => ({ ...state }));\n    // state\n    const [title, setTitle] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const contentFromLS = () => {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (localStorage.getItem('content')) {\n            return JSON.parse(localStorage.getItem('content'));\n        } else {\n            return false;\n        }\n    };\n    const [content, setContent] = useState(contentFromLS);\n\n    // router\n    const { slug } = match.params;\n\n    useEffect(() => {\n        loadProduct();\n    }, []);\n\n    const loadProduct = () => {\n        getProduct(slug).then((p) => {\n            // console.log(\"single product\", p);\n            // 1 load single proudct\n            console.log('Product ', p.data.title)\n            setTitle(p.data.title);\n            setContent(p.data.content);\n        });\n    };\n\n\n    const saveContentToDB = () => {\n        saveContent(slug, content).then((res) => {\n            if (res.data.ok) {\n                setLoading(false);\n                setContent(true);\n                toast.success(\"content saved\");\n                history.push(`/admin/product/${slug}`);\n            }\n        });\n\n    };\n\n    const handleContent = (e) => {\n        console.log(e);\n        setContent(e);\n        if (typeof window !== 'undefined') {\n            localStorage.setItem(`content`, JSON.stringify(e));\n        }\n    };\n\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col-md-10\">\n                    {loading ? (\n                        <LoadingOutlined className=\"text-danger h1\" />\n                    ) : (\n                        <h4>Product Description</h4>\n                    )}\n                    <form>\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label>Title</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"title\"\n                                        className=\"form-control\"\n                                        value={title}\n                                        onChange={setTitle}\n                                        readOnly\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n\n                    <div>\n                        <ReactQuill\n                            modules={QuillModules}\n                            formats={QuillFormats}\n                            //theme=\"snow\" \n                            value={content}\n                            onChange={handleContent}\n                        />\n                        <Button className=\"mt-2\" onClick={saveContentToDB} type=\"primary\" ghost>\n                            SAVE\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ProductContent;\n","/Users/somkiatjaidee/code/elec-app/client/src/helpers/quill.js",[],"/Users/somkiatjaidee/code/elec-app/client/src/pages/user/Prifile.js",["507","508","509"],"import React, { useState, useEffect } from \"react\";\nimport UserNav from \"../../components/nav/UserNav\";\nimport { getProfile, getWishlist, removeWishlist } from \"../../functions/user\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport NoImg from \"../../images/noimg.jpg\";\nimport renderHTML from 'react-render-html';\n\nconst Profile = () => {\n    const { user } = useSelector((state) => ({ ...state }));\n    const [profile, setProfile] = useState({\n        name: '',\n        email: '',\n        address: '',\n        createdAt:''\n    });\n    const [wishlist, setWishlist] = useState([]);\n\n\n    useEffect(() => {\n        loadProfile();\n        loadWishlist();\n    }, []);\n\n    const loadProfile = () =>\n        getProfile(user.token).then((res) => {\n            console.log(JSON.stringify(res.data, null, 4));\n            setProfile({ \n                name: res.data.user.name, \n                email: res.data.user.email, \n                address: res.data.user.address, \n                createdAt: res.data.user.createdAt});\n        });\n\n\n\n    const loadWishlist = () =>\n        getWishlist(user.token).then((res) => {\n            // console.log(res);\n            setWishlist(res.data.wishlist);\n        });\n\n    const handleRemove = (productId) =>\n        removeWishlist(productId, user.token).then((res) => {\n            loadWishlist();\n        });\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <UserNav />\n                </div>\n\n                <div className=\"col-md-10\">\n                    <div className=\"card mb-3\" style={{ maxWidth: 540 }}>\n                        <div className=\"row g-0\">\n                            <div className=\"col-md-4\">\n                                <img src={NoImg} className=\"img-fluid rounded-start\"/>\n                            </div>\n                            <div className=\"col-md-8\">\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">{user.name}</h5>\n                                    <p className=\"card-text\">{profile.email}</p>\n                                    <p className=\"card-text\">{renderHTML(profile.address)}</p>\n                                    <p className=\"card-text\"><small className=\"text-muted\">{profile.createdAt}</small></p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <h4>Wishlist</h4>\n                    {wishlist.map((p) => (\n                        <div key={p._id} className=\"alert alert-secondary\">\n                            <Link to={`/product/${p.slug}`}>{p.title}</Link>\n                            <span\n                                onClick={() => handleRemove(p._id)}\n                                className=\"btn btn-sm float-right\"\n                            >\n                                <DeleteOutlined className=\"text-danger\" />\n                            </span>\n                        </div>\n                    ))}\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;\n","/Users/somkiatjaidee/code/elec-app/client/src/pages/user/Contact.js",["510","511","512","513","514","515"],"import React, { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport renderHTML from 'react-render-html';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport UserNav from \"../../components/nav/UserNav\";\nimport { getProfile, saveContact } from \"../../functions/user\";\n\nconst Contact = () => {\n    //redux\n    const { user } = useSelector((state) => ({ ...state }));\n    //state\n    const [loading, setLoading] = useState(false);\n\n\n    useEffect(() => {\n        setTitle();\n        setDescription();\n    }, []);\n\n    const titleFromLS = () => {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (localStorage.getItem('title')) {\n            return JSON.parse(localStorage.getItem('title'));\n        } else {\n            return false;\n        }\n    };\n    const [title, setTitle] = useState(titleFromLS);\n\n  /*   const descriptionFromLS = () => {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (localStorage.getItem('description')) {\n            return JSON.parse(localStorage.getItem('description'));\n        } else {\n            return false;\n        }\n    }; */\n    const [description, setDescription] = useState(false);\n\n\n    const saveContactToDB = () => {\n        saveContact( title, description).then((res) => {\n            if (res.data.ok) {\n               // setLoading(false);\n                setTitle(true);\n                setDescription(true);\n                toast.success(\"content saved\");\n                //history.push(`/admin/product/${slug}`);\n            }\n        });\n\n    };\n\n    const handleContact = (e) => {\n        console.log(e);\n       /*  setTitle(e);\n        setDescription(e);\n        if (typeof window !== 'undefined') {\n           localStorage.setItem(`title`, JSON.stringify(e));\n        }  */\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <UserNav />\n                </div>\n\n                <div className=\"col-md-10\">\n                    <h4>ติดต่อสอบถาม / แจ้งปัญหาการใช้งาน</h4>\n                    <form >\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"form-group\">\n                                    <label>Title</label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"title\"\n                                        className=\"form-control\"\n                                        value={title}\n                                        onChange={handleContact}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <textarea\n                                rows=\"5\"\n                                type=\"text\"\n                                name=\"description\"\n                                className=\"form-control\"\n                                value={description}\n                                onChange={handleContact}\n                            />\n                        </div>\n                        <button className=\"btn btn-outline-info btn-lg\" onClick={saveContactToDB}>SEND</button>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Contact;\n",{"ruleId":"516","severity":1,"message":"517","line":45,"column":8,"nodeType":"518","endLine":45,"endColumn":10,"suggestions":"519"},{"ruleId":"520","severity":1,"message":"521","line":71,"column":25,"nodeType":"522","endLine":71,"endColumn":48},{"ruleId":"523","severity":1,"message":"524","line":71,"column":25,"nodeType":"522","endLine":71,"endColumn":48},{"ruleId":"520","severity":1,"message":"521","line":79,"column":25,"nodeType":"522","endLine":79,"endColumn":50},{"ruleId":"523","severity":1,"message":"524","line":79,"column":25,"nodeType":"522","endLine":79,"endColumn":50},{"ruleId":"520","severity":1,"message":"521","line":83,"column":25,"nodeType":"522","endLine":83,"endColumn":50},{"ruleId":"523","severity":1,"message":"524","line":83,"column":25,"nodeType":"522","endLine":83,"endColumn":50},{"ruleId":"525","severity":1,"message":"526","line":5,"column":10,"nodeType":"527","messageId":"528","endLine":5,"endColumn":19},{"ruleId":"525","severity":1,"message":"529","line":12,"column":18,"nodeType":"527","messageId":"528","endLine":12,"endColumn":27},{"ruleId":"525","severity":1,"message":"530","line":21,"column":12,"nodeType":"527","messageId":"528","endLine":21,"endColumn":16},{"ruleId":"525","severity":1,"message":"531","line":23,"column":12,"nodeType":"527","messageId":"528","endLine":23,"endColumn":15},{"ruleId":"525","severity":1,"message":"532","line":24,"column":20,"nodeType":"527","messageId":"528","endLine":24,"endColumn":29},{"ruleId":"525","severity":1,"message":"533","line":27,"column":20,"nodeType":"527","messageId":"528","endLine":27,"endColumn":29},{"ruleId":"516","severity":1,"message":"534","line":80,"column":8,"nodeType":"518","endLine":80,"endColumn":12,"suggestions":"535"},{"ruleId":"516","severity":1,"message":"536","line":20,"column":8,"nodeType":"518","endLine":20,"endColumn":14,"suggestions":"537"},{"ruleId":"516","severity":1,"message":"538","line":22,"column":5,"nodeType":"527","endLine":22,"endColumn":14,"suggestions":"539"},{"ruleId":"525","severity":1,"message":"540","line":4,"column":23,"nodeType":"527","messageId":"528","endLine":4,"endColumn":34},{"ruleId":"516","severity":1,"message":"541","line":15,"column":6,"nodeType":"518","endLine":15,"endColumn":8,"suggestions":"542"},{"ruleId":"525","severity":1,"message":"540","line":5,"column":23,"nodeType":"527","messageId":"528","endLine":5,"endColumn":34},{"ruleId":"525","severity":1,"message":"543","line":7,"column":10,"nodeType":"527","messageId":"528","endLine":7,"endColumn":15},{"ruleId":"516","severity":1,"message":"544","line":18,"column":6,"nodeType":"518","endLine":18,"endColumn":8,"suggestions":"545"},{"ruleId":"516","severity":1,"message":"546","line":16,"column":8,"nodeType":"518","endLine":16,"endColumn":10,"suggestions":"547"},{"ruleId":"525","severity":1,"message":"548","line":6,"column":21,"nodeType":"527","messageId":"528","endLine":6,"endColumn":27},{"ruleId":"525","severity":1,"message":"540","line":4,"column":23,"nodeType":"527","messageId":"528","endLine":4,"endColumn":34},{"ruleId":"516","severity":1,"message":"549","line":14,"column":8,"nodeType":"518","endLine":14,"endColumn":10,"suggestions":"550"},{"ruleId":"525","severity":1,"message":"551","line":7,"column":10,"nodeType":"527","messageId":"528","endLine":7,"endColumn":14},{"ruleId":"525","severity":1,"message":"552","line":8,"column":10,"nodeType":"527","messageId":"528","endLine":8,"endColumn":22},{"ruleId":"525","severity":1,"message":"553","line":8,"column":24,"nodeType":"527","messageId":"528","endLine":8,"endColumn":38},{"ruleId":"525","severity":1,"message":"554","line":10,"column":8,"nodeType":"527","messageId":"528","endLine":10,"endColumn":19},{"ruleId":"516","severity":1,"message":"555","line":23,"column":8,"nodeType":"518","endLine":23,"endColumn":10,"suggestions":"556"},{"ruleId":"516","severity":1,"message":"557","line":16,"column":8,"nodeType":"518","endLine":16,"endColumn":10,"suggestions":"558"},{"ruleId":"525","severity":1,"message":"559","line":6,"column":28,"nodeType":"527","messageId":"528","endLine":6,"endColumn":41},{"ruleId":"516","severity":1,"message":"560","line":20,"column":8,"nodeType":"518","endLine":20,"endColumn":10,"suggestions":"561"},{"ruleId":"516","severity":1,"message":"560","line":22,"column":8,"nodeType":"518","endLine":22,"endColumn":10,"suggestions":"562"},{"ruleId":"525","severity":1,"message":"540","line":2,"column":23,"nodeType":"527","messageId":"528","endLine":2,"endColumn":34},{"ruleId":"525","severity":1,"message":"551","line":7,"column":10,"nodeType":"527","messageId":"528","endLine":7,"endColumn":14},{"ruleId":"525","severity":1,"message":"552","line":8,"column":10,"nodeType":"527","messageId":"528","endLine":8,"endColumn":22},{"ruleId":"525","severity":1,"message":"553","line":8,"column":24,"nodeType":"527","messageId":"528","endLine":8,"endColumn":38},{"ruleId":"525","severity":1,"message":"554","line":10,"column":8,"nodeType":"527","messageId":"528","endLine":10,"endColumn":19},{"ruleId":"516","severity":1,"message":"563","line":23,"column":8,"nodeType":"518","endLine":23,"endColumn":10,"suggestions":"564"},{"ruleId":"525","severity":1,"message":"565","line":10,"column":21,"nodeType":"527","messageId":"528","endLine":10,"endColumn":40},{"ruleId":"525","severity":1,"message":"566","line":43,"column":12,"nodeType":"527","messageId":"528","endLine":43,"endColumn":18},{"ruleId":"525","severity":1,"message":"567","line":44,"column":12,"nodeType":"527","messageId":"528","endLine":44,"endColumn":29},{"ruleId":"525","severity":1,"message":"568","line":44,"column":31,"nodeType":"527","messageId":"528","endLine":44,"endColumn":51},{"ruleId":"525","severity":1,"message":"569","line":45,"column":12,"nodeType":"527","messageId":"528","endLine":45,"endColumn":30},{"ruleId":"525","severity":1,"message":"570","line":45,"column":32,"nodeType":"527","messageId":"528","endLine":45,"endColumn":53},{"ruleId":"525","severity":1,"message":"571","line":46,"column":12,"nodeType":"527","messageId":"528","endLine":46,"endColumn":25},{"ruleId":"525","severity":1,"message":"572","line":46,"column":27,"nodeType":"527","messageId":"528","endLine":46,"endColumn":43},{"ruleId":"516","severity":1,"message":"573","line":59,"column":8,"nodeType":"518","endLine":59,"endColumn":10,"suggestions":"574"},{"ruleId":"575","severity":1,"message":"576","line":72,"column":33,"nodeType":"577","messageId":"578","endLine":72,"endColumn":35},{"ruleId":"516","severity":1,"message":"579","line":46,"column":6,"nodeType":"518","endLine":46,"endColumn":8,"suggestions":"580"},{"ruleId":"581","severity":1,"message":"582","line":21,"column":17,"nodeType":"522","endLine":21,"endColumn":51},{"ruleId":"581","severity":1,"message":"582","line":22,"column":17,"nodeType":"522","endLine":22,"endColumn":49},{"ruleId":"581","severity":1,"message":"582","line":23,"column":17,"nodeType":"522","endLine":23,"endColumn":54},{"ruleId":"581","severity":1,"message":"582","line":24,"column":17,"nodeType":"522","endLine":24,"endColumn":80},{"ruleId":"581","severity":1,"message":"582","line":8,"column":16,"nodeType":"522","endLine":8,"endColumn":71},{"ruleId":"525","severity":1,"message":"583","line":2,"column":18,"nodeType":"527","messageId":"528","endLine":2,"endColumn":24},{"ruleId":"581","severity":1,"message":"582","line":37,"column":33,"nodeType":"522","endLine":37,"endColumn":81},{"ruleId":"581","severity":1,"message":"582","line":44,"column":33,"nodeType":"522","endLine":44,"endColumn":72},{"ruleId":"525","severity":1,"message":"584","line":15,"column":5,"nodeType":"527","messageId":"528","endLine":15,"endColumn":9},{"ruleId":"516","severity":1,"message":"585","line":15,"column":8,"nodeType":"518","endLine":15,"endColumn":14,"suggestions":"586"},{"ruleId":"525","severity":1,"message":"587","line":10,"column":9,"nodeType":"527","messageId":"528","endLine":10,"endColumn":13},{"ruleId":"525","severity":1,"message":"588","line":16,"column":13,"nodeType":"527","messageId":"528","endLine":16,"endColumn":17},{"ruleId":"525","severity":1,"message":"589","line":16,"column":19,"nodeType":"527","messageId":"528","endLine":16,"endColumn":23},{"ruleId":"525","severity":1,"message":"590","line":53,"column":28,"nodeType":"527","messageId":"528","endLine":53,"endColumn":39},{"ruleId":"525","severity":1,"message":"591","line":53,"column":54,"nodeType":"527","messageId":"528","endLine":53,"endColumn":62},{"ruleId":"581","severity":1,"message":"582","line":65,"column":25,"nodeType":"522","endLine":69,"endColumn":27},{"ruleId":"523","severity":1,"message":"524","line":78,"column":25,"nodeType":"522","endLine":78,"endColumn":86},{"ruleId":"516","severity":1,"message":"585","line":15,"column":8,"nodeType":"518","endLine":15,"endColumn":14,"suggestions":"592"},{"ruleId":"525","severity":1,"message":"593","line":26,"column":5,"nodeType":"527","messageId":"528","endLine":26,"endColumn":13},{"ruleId":"525","severity":1,"message":"594","line":28,"column":5,"nodeType":"527","messageId":"528","endLine":28,"endColumn":13},{"ruleId":"525","severity":1,"message":"595","line":30,"column":5,"nodeType":"527","messageId":"528","endLine":30,"endColumn":11},{"ruleId":"525","severity":1,"message":"596","line":33,"column":5,"nodeType":"527","messageId":"528","endLine":33,"endColumn":10},{"ruleId":"525","severity":1,"message":"597","line":34,"column":5,"nodeType":"527","messageId":"528","endLine":34,"endColumn":10},{"ruleId":"525","severity":1,"message":"598","line":35,"column":5,"nodeType":"527","messageId":"528","endLine":35,"endColumn":16},{"ruleId":"525","severity":1,"message":"587","line":7,"column":9,"nodeType":"527","messageId":"528","endLine":7,"endColumn":13},{"ruleId":"525","severity":1,"message":"590","line":11,"column":20,"nodeType":"527","messageId":"528","endLine":11,"endColumn":31},{"ruleId":"581","severity":1,"message":"582","line":16,"column":17,"nodeType":"522","endLine":20,"endColumn":19},{"ruleId":"525","severity":1,"message":"599","line":34,"column":9,"nodeType":"527","messageId":"528","endLine":34,"endColumn":13},{"ruleId":"525","severity":1,"message":"595","line":37,"column":9,"nodeType":"527","messageId":"528","endLine":37,"endColumn":15},{"ruleId":"600","severity":1,"message":"601","line":4,"column":5,"nodeType":"602","messageId":"603","endLine":4,"endColumn":19},{"ruleId":"600","severity":1,"message":"601","line":9,"column":5,"nodeType":"602","messageId":"603","endLine":9,"endColumn":19},{"ruleId":"575","severity":1,"message":"576","line":26,"column":29,"nodeType":"577","messageId":"578","endLine":26,"endColumn":31},{"ruleId":"575","severity":1,"message":"576","line":57,"column":29,"nodeType":"577","messageId":"578","endLine":57,"endColumn":31},{"ruleId":"604","severity":1,"message":"605","line":58,"column":25,"nodeType":"606","messageId":"607","endLine":58,"endColumn":27},{"ruleId":"575","severity":1,"message":"576","line":80,"column":29,"nodeType":"577","messageId":"578","endLine":80,"endColumn":31},{"ruleId":"525","severity":1,"message":"589","line":27,"column":19,"nodeType":"527","messageId":"528","endLine":27,"endColumn":23},{"ruleId":"581","severity":1,"message":"582","line":81,"column":58,"nodeType":"522","endLine":81,"endColumn":95},{"ruleId":"581","severity":1,"message":"582","line":84,"column":38,"nodeType":"522","endLine":84,"endColumn":85},{"ruleId":"523","severity":1,"message":"524","line":100,"column":33,"nodeType":"522","endLine":100,"endColumn":62},{"ruleId":"523","severity":1,"message":"524","line":105,"column":29,"nodeType":"522","endLine":105,"endColumn":62},{"ruleId":"516","severity":1,"message":"608","line":37,"column":8,"nodeType":"518","endLine":37,"endColumn":10,"suggestions":"609"},{"ruleId":"581","severity":1,"message":"582","line":124,"column":25,"nodeType":"522","endLine":131,"endColumn":27},{"ruleId":"525","severity":1,"message":"583","line":2,"column":17,"nodeType":"527","messageId":"528","endLine":2,"endColumn":23},{"ruleId":"516","severity":1,"message":"585","line":15,"column":8,"nodeType":"518","endLine":15,"endColumn":14,"suggestions":"610"},{"ruleId":"525","severity":1,"message":"588","line":14,"column":13,"nodeType":"527","messageId":"528","endLine":14,"endColumn":17},{"ruleId":"516","severity":1,"message":"573","line":38,"column":8,"nodeType":"518","endLine":38,"endColumn":10,"suggestions":"611"},{"ruleId":"525","severity":1,"message":"588","line":16,"column":13,"nodeType":"527","messageId":"528","endLine":16,"endColumn":17},{"ruleId":"516","severity":1,"message":"573","line":38,"column":8,"nodeType":"518","endLine":38,"endColumn":10,"suggestions":"612"},{"ruleId":"525","severity":1,"message":"540","line":4,"column":23,"nodeType":"527","messageId":"528","endLine":4,"endColumn":34},{"ruleId":"516","severity":1,"message":"613","line":24,"column":8,"nodeType":"518","endLine":24,"endColumn":10,"suggestions":"614"},{"ruleId":"581","severity":1,"message":"582","line":60,"column":33,"nodeType":"522","endLine":60,"endColumn":87},{"ruleId":"525","severity":1,"message":"615","line":3,"column":8,"nodeType":"527","messageId":"528","endLine":3,"endColumn":18},{"ruleId":"525","severity":1,"message":"540","line":4,"column":23,"nodeType":"527","messageId":"528","endLine":4,"endColumn":34},{"ruleId":"525","severity":1,"message":"616","line":6,"column":10,"nodeType":"527","messageId":"528","endLine":6,"endColumn":20},{"ruleId":"525","severity":1,"message":"588","line":10,"column":13,"nodeType":"527","messageId":"528","endLine":10,"endColumn":17},{"ruleId":"525","severity":1,"message":"617","line":12,"column":12,"nodeType":"527","messageId":"528","endLine":12,"endColumn":19},{"ruleId":"525","severity":1,"message":"618","line":12,"column":21,"nodeType":"527","messageId":"528","endLine":12,"endColumn":31},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.","ArrayExpression",["619"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'getBrands' is defined but never used.","Identifier","unusedVar","'ItemGroup' is assigned a value but never used.","'star' is assigned a value but never used.","'sub' is assigned a value but never used.","'setBrands' is assigned a value but never used.","'setColors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'price'. Either include it or remove the dependency array.",["620"],"React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["621"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [product.ratings, user] as a second argument to the useEffect Hook.",["622"],"'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'loadOrders'. Either include it or remove the dependency array.",["623"],"'toast' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.",["624"],"React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["625"],"'getSub' is defined but never used.","React Hook useEffect has a missing dependency: 'loadWishlist'. Either include it or remove the dependency array.",["626"],"'Link' is defined but never used.","'EditOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'LocalSearch' is defined but never used.","React Hook useEffect has a missing dependency: 'loadGeneration'. Either include it or remove the dependency array.",["627"],"React Hook useEffect has a missing dependency: 'loadBrand'. Either include it or remove the dependency array.",["628"],"'getGeneration' is defined but never used.","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.",["629"],["630"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["631"],"'getBrandGenerations' is defined but never used.","'brands' is assigned a value but never used.","'generationOptions' is assigned a value but never used.","'setGenerationOptions' is assigned a value but never used.","'arrayOfGenerations' is assigned a value but never used.","'setArrayOfGenerations' is assigned a value but never used.","'selectedBrand' is assigned a value but never used.","'setSelectedBrand' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProduct'. Either include it or remove the dependency array.",["632"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'loadBrands' and 'loadCategories'. Either include them or remove the dependency array.",["633"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","'blue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadAllProducts'. Either include it or remove the dependency array.",["634"],"'Meta' is assigned a value but never used.","'user' is assigned a value but never used.","'cart' is assigned a value but never used.","'description' is assigned a value but never used.","'quantity' is assigned a value but never used.",["635"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'images' is assigned a value but never used.","'color' is assigned a value but never used.","'brand' is assigned a value but never used.","'generations' is assigned a value but never used.","'subs' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'coupon' and 'user.token'. Either include them or remove the dependency array.",["636"],["637"],["638"],["639"],"React Hook useEffect has missing dependencies: 'loadProfile' and 'loadWishlist'. Either include them or remove the dependency array.",["640"],"'renderHTML' is defined but never used.","'getProfile' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"661","fix":"663"},{"desc":"664","fix":"665"},{"desc":"666","fix":"667"},{"desc":"668","fix":"669"},{"desc":"670","fix":"671"},{"desc":"670","fix":"672"},{"desc":"673","fix":"674"},{"desc":"670","fix":"675"},{"desc":"666","fix":"676"},{"desc":"666","fix":"677"},{"desc":"678","fix":"679"},"Update the dependencies array to be: [user.token]",{"range":"680","text":"681"},"Update the dependencies array to be: [ok, price]",{"range":"682","text":"683"},"Update the dependencies array to be: [loadSingleProduct, slug]",{"range":"684","text":"685"},"Add dependencies array: [product.ratings, user]",{"range":"686","text":"687"},"Update the dependencies array to be: [loadOrders]",{"range":"688","text":"689"},"Update the dependencies array to be: [loadUserOrders]",{"range":"690","text":"691"},"Update the dependencies array to be: [loadCategory]",{"range":"692","text":"693"},"Update the dependencies array to be: [loadWishlist]",{"range":"694","text":"695"},"Update the dependencies array to be: [loadGeneration]",{"range":"696","text":"697"},"Update the dependencies array to be: [loadBrand]",{"range":"698","text":"699"},"Update the dependencies array to be: [slug]",{"range":"700","text":"701"},{"range":"702","text":"701"},"Update the dependencies array to be: [loadSub]",{"range":"703","text":"704"},"Update the dependencies array to be: [loadProduct]",{"range":"705","text":"706"},"Update the dependencies array to be: [loadBrands, loadCategories]",{"range":"707","text":"708"},"Update the dependencies array to be: [loadAllProducts, page]",{"range":"709","text":"710"},{"range":"711","text":"710"},"Update the dependencies array to be: [coupon, user.token]",{"range":"712","text":"713"},{"range":"714","text":"710"},{"range":"715","text":"706"},{"range":"716","text":"706"},"Update the dependencies array to be: [loadProfile, loadWishlist]",{"range":"717","text":"718"},[1537,1539],"[user.token]",[3118,3122],"[ok, price]",[673,679],"[loadSingleProduct, slug]",[1003,1003],", [product.ratings, user]",[499,501],"[loadOrders]",[715,717],"[loadUserOrders]",[595,597],"[loadCategory]",[512,514],"[loadWishlist]",[937,939],"[loadGeneration]",[572,574],"[loadBrand]",[645,647],"[slug]",[797,799],[927,929],"[loadSub]",[2366,2368],"[loadProduct]",[1829,1831],"[loadBrands, loadCategories]",[543,549],"[loadAllProducts, page]",[543,549],[1576,1578],"[coupon, user.token]",[547,553],[1163,1165],[1282,1284],[767,769],"[loadProfile, loadWishlist]"]